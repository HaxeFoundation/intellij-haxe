Haxe File
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('AtConstTest')
    HaxePsiToken:{('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          ACCESS
            HaxePsiToken:public('public')
        DECLARATION_ATTRIBUTE
          HaxePsiToken:static('static')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('main')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          NEW_EXPRESSION
            HaxePsiToken:new('new')
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('Test')
              TYPE_PARAM
                HaxePsiToken:<('<')
                TYPE_LIST
                  TYPE_LIST_PART
                    TYPE_OR_ANONYMOUS
                      TYPE
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('String')
                HaxePsiToken:>('>')
            HaxePsiToken:(('(')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          PsiComment(MSL_COMMENT)('// Invalid, but should parse OK.')
          HaxePsiToken:}('}')
    HaxePsiToken:}('}')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('Test')
    GENERIC_PARAM
      HaxePsiToken:<('<')
      GENERIC_LIST_PART
        CUSTOM_META
          HaxePsiToken:MACRO_ID('@:const')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('T')
      HaxePsiToken:>('>')
    HaxePsiToken:{('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          ACCESS
            HaxePsiToken:public('public')
        DECLARATION_ATTRIBUTE
          HaxePsiToken:static('static')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('main')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          LOCAL_VAR_DECLARATION_LIST
            HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('t')
              VAR_INIT
                HaxePsiToken:=('=')
                NEW_EXPRESSION
                  HaxePsiToken:new('new')
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('Test')
                    TYPE_PARAM
                      HaxePsiToken:<('<')
                      TYPE_LIST
                        TYPE_LIST_PART
                          STRING_LITERAL_EXPRESSION
                            HaxePsiToken:OPEN_QUOTE(''')
                            HaxePsiToken:REGULAR_STRING_PART('string.ml')
                            HaxePsiToken:CLOSING_QUOTE(''')
                      HaxePsiToken:>('>')
                  HaxePsiToken:(('(')
                  HaxePsiToken:)(')')
            HaxePsiToken:;(';')
          PsiComment(MSL_COMMENT)('// <---- Original errors on '<' and ';'')
          HaxePsiToken:}('}')
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          ACCESS
            HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:new('new')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          HaxePsiToken:}('}')
    HaxePsiToken:}('}')