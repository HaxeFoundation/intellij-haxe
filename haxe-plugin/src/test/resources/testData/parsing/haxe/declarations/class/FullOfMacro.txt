Haxe File
  CLASS_DECLARATION
    PsiModifierList:@:keep
@:final @:hack
@:native("my.real.Path")
@:ns("namespace")
@:meta(Event(name="test",type="Foo"))
@:bitmap("myfile.png")
@:build(MacroGenerator.build())
@:require(dep1, dep2, dep3)
@:require(haxe_ver >= 3.2)
@superClass("user name", {name:"user"})
      MACRO_CLASS
        SIMPLE_META
          KEEP_META
            HaxePsiToken:@:keep('@:keep')
      MACRO_CLASS
        SIMPLE_META
          FINAL_META
            HaxePsiToken:@:final('@:final')
      MACRO_CLASS
        SIMPLE_META
          HACK_META
            HaxePsiToken:@:hack('@:hack')
      MACRO_CLASS
        NATIVE_META
          HaxePsiToken:@:native('@:native')
          HaxePsiToken:(('(')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART('my.real.Path')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:)(')')
      MACRO_CLASS
        NS_META
          HaxePsiToken:@:ns('@:ns')
          HaxePsiToken:(('(')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART('namespace')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:)(')')
      MACRO_CLASS
        META_META
          HaxePsiToken:@:meta('@:meta')
          HaxePsiToken:(('(')
          HaxePsiToken:ID('Event')
          HaxePsiToken:(('(')
          META_KEY_VALUE
            HaxePsiToken:ID('name')
            HaxePsiToken:=('=')
            STRING_LITERAL_EXPRESSION
              HaxePsiToken:OPEN_QUOTE('"')
              HaxePsiToken:REGULAR_STRING_PART('test')
              HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:,(',')
          META_KEY_VALUE
            HaxePsiToken:ID('type')
            HaxePsiToken:=('=')
            STRING_LITERAL_EXPRESSION
              HaxePsiToken:OPEN_QUOTE('"')
              HaxePsiToken:REGULAR_STRING_PART('Foo')
              HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:)(')')
          HaxePsiToken:)(')')
      MACRO_CLASS
        BITMAP_META
          HaxePsiToken:@:bitmap('@:bitmap')
          HaxePsiToken:(('(')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART('myfile.png')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:)(')')
      MACRO_CLASS
        BUILD_MACRO
          HaxePsiToken:@:build('@:build')
          HaxePsiToken:(('(')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('MacroGenerator')
              HaxePsiToken:.('.')
              IDENTIFIER
                HaxePsiToken:ID('build')
            HaxePsiToken:(('(')
            HaxePsiToken:)(')')
          HaxePsiToken:)(')')
      MACRO_CLASS
        REQUIRE_META
          HaxePsiToken:@:require('@:require')
          HaxePsiToken:(('(')
          IDENTIFIER
            HaxePsiToken:ID('dep1')
          HaxePsiToken:,(',')
          IDENTIFIER
            HaxePsiToken:ID('dep2')
          HaxePsiToken:,(',')
          IDENTIFIER
            HaxePsiToken:ID('dep3')
          HaxePsiToken:)(')')
      MACRO_CLASS
        REQUIRE_META
          HaxePsiToken:@:require('@:require')
          HaxePsiToken:(('(')
          HaxePsiToken:ID('haxe_ver')
          COMPARE_OPERATION
            HaxePsiToken:>=('>=')
          HaxePsiToken:LITFLOAT('3.2')
          HaxePsiToken:)(')')
      MACRO_CLASS
        CUSTOM_META
          HaxePsiToken:MACRO_ID('@superClass')
          HaxePsiToken:(('(')
          EXPRESSION_LIST
            STRING_LITERAL_EXPRESSION
              HaxePsiToken:OPEN_QUOTE('"')
              HaxePsiToken:REGULAR_STRING_PART('user name')
              HaxePsiToken:CLOSING_QUOTE('"')
            HaxePsiToken:,(',')
            OBJECT_LITERAL
              HaxePsiToken:{('{')
              OBJECT_LITERAL_ELEMENT
                IDENTIFIER
                  HaxePsiToken:ID('name')
                HaxePsiToken::(':')
                STRING_LITERAL_EXPRESSION
                  HaxePsiToken:OPEN_QUOTE('"')
                  HaxePsiToken:REGULAR_STRING_PART('user')
                  HaxePsiToken:CLOSING_QUOTE('"')
              HaxePsiToken:}('}')
          HaxePsiToken:)(')')
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('FullOfMacro')
    HaxePsiToken:{('{')
    CLASS_BODY
      VAR_DECLARATION
        CUSTOM_META
          HaxePsiToken:MACRO_ID('@customUser')
        HaxePsiToken:var('var')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('_value')
        HaxePsiToken:;(';')
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        GETTER_META
          HaxePsiToken:@:getter('@:getter')
          HaxePsiToken:(('(')
          REFERENCE_EXPRESSION
            IDENTIFIER
              HaxePsiToken:ID('_value')
          HaxePsiToken:)(')')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('getValue')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          RETURN_STATEMENT
            HaxePsiToken:return('return')
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('_value')
            HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        SETTER_META
          HaxePsiToken:@:setter('@:setter')
          HaxePsiToken:(('(')
          REFERENCE_EXPRESSION
            IDENTIFIER
              HaxePsiToken:ID('_value')
          HaxePsiToken:)(')')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('setValue')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                HaxePsiToken:ID('value')
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          ASSIGN_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('_value')
            ASSIGN_OPERATION
              HaxePsiToken:=('=')
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('value')
          HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        OVERLOAD_META
          HaxePsiToken:@:overload('@:overload')
          HaxePsiToken:(('(')
          ANONYMOUS_FUNCTION_DECLARATION
            HaxePsiToken:function('function')
            HaxePsiToken:(('(')
            PARAMETER_LIST
              PARAMETER
                COMPONENT_NAME
                  IDENTIFIER
                    HaxePsiToken:ID('name')
                TYPE_TAG
                  HaxePsiToken::(':')
                  TYPE_OR_ANONYMOUS
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('String')
              HaxePsiToken:,(',')
              PARAMETER
                COMPONENT_NAME
                  IDENTIFIER
                    HaxePsiToken:ID('value')
                TYPE_TAG
                  HaxePsiToken::(':')
                  TYPE_OR_ANONYMOUS
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('String')
            HaxePsiToken:)(')')
            TYPE_TAG
              HaxePsiToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('js')
                    HaxePsiToken:.('.')
                    IDENTIFIER
                      HaxePsiToken:ID('JQuery')
            HaxePsiToken:{('{')
            HaxePsiToken:}('}')
          HaxePsiToken:)(')')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('attr')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                HaxePsiToken:ID('name')
            TYPE_TAG
              HaxePsiToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('String')
        HaxePsiToken:)(')')
        TYPE_TAG
          HaxePsiToken::(':')
          TYPE_OR_ANONYMOUS
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('String')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          HaxePsiToken:}('}')
    HaxePsiToken:}('}')
  EXTERN_CLASS_DECLARATION
    PsiModifierList:@:build(MacroGenerator.build([], true))
      MACRO_CLASS
        BUILD_MACRO
          HaxePsiToken:@:build('@:build')
          HaxePsiToken:(('(')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('MacroGenerator')
              HaxePsiToken:.('.')
              IDENTIFIER
                HaxePsiToken:ID('build')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ARRAY_LITERAL
                HaxePsiToken:[('[')
                HaxePsiToken:](']')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:true('true')
            HaxePsiToken:)(')')
          HaxePsiToken:)(')')
    EXTERN_KEY_WORD
      HaxePsiToken:extern('extern ')
    PRIVATE_KEY_WORD
      HaxePsiToken:private('private')
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('Test')
    HaxePsiToken:{('{')
    EXTERN_CLASS_DECLARATION_BODY
      <empty list>
    HaxePsiToken:}('}')