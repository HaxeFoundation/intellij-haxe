Haxe File
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    HaxePsiToken:;(';')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('MapLiteralComprehensionWhileFor')
    HaxePsiToken:{('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          ACCESS
            HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('MapLiteralComprehensionWhileFor')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          LOCAL_VAR_DECLARATION_LIST
            HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('words')
              VAR_INIT
                HaxePsiToken:=('=')
                ARRAY_LITERAL
                  HaxePsiToken:[('[')
                  EXPRESSION_LIST
                    STRING_LITERAL_EXPRESSION
                      HaxePsiToken:OPEN_QUOTE('"')
                      HaxePsiToken:REGULAR_STRING_PART('one')
                      HaxePsiToken:CLOSING_QUOTE('"')
                    HaxePsiToken:,(',')
                    STRING_LITERAL_EXPRESSION
                      HaxePsiToken:OPEN_QUOTE('"')
                      HaxePsiToken:REGULAR_STRING_PART('two')
                      HaxePsiToken:CLOSING_QUOTE('"')
                    HaxePsiToken:,(',')
                    STRING_LITERAL_EXPRESSION
                      HaxePsiToken:OPEN_QUOTE('"')
                      HaxePsiToken:REGULAR_STRING_PART('three')
                      HaxePsiToken:CLOSING_QUOTE('"')
                  HaxePsiToken:](']')
            HaxePsiToken:;(';')
          LOCAL_VAR_DECLARATION_LIST
            HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('i')
              VAR_INIT
                HaxePsiToken:=('=')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
            HaxePsiToken:;(';')
          LOCAL_VAR_DECLARATION_LIST
            HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('map')
              VAR_INIT
                HaxePsiToken:=('=')
                MAP_LITERAL
                  HaxePsiToken:[('[')
                  MAP_INITIALIZER_WHILE_STATEMENT
                    HaxePsiToken:while('while')
                    HaxePsiToken:(('(')
                    COMPARE_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('i')
                      COMPARE_OPERATION
                        HaxePsiToken:<('<')
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('words')
                        HaxePsiToken:.('.')
                        IDENTIFIER
                          HaxePsiToken:ID('length')
                    HaxePsiToken:)(')')
                    MAP_INITIALIZER_FOR_STATEMENT
                      HaxePsiToken:for('for')
                      HaxePsiToken:(('(')
                      COMPONENT_NAME
                        IDENTIFIER
                          HaxePsiToken:ID('j')
                      HaxePsiToken:in('in')
                      ITERABLE
                        ITERATOR_EXPRESSION
                          LITERAL_EXPRESSION
                            HaxePsiToken:LITINT('0')
                          HaxePsiToken:...('...')
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                HaxePsiToken:ID('words')
                            HaxePsiToken:.('.')
                            IDENTIFIER
                              HaxePsiToken:ID('length')
                      HaxePsiToken:)(')')
                      FAT_ARROW_EXPRESSION
                        ADDITIVE_EXPRESSION
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              HaxePsiToken:ID('i')
                          HaxePsiToken:+('+')
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              HaxePsiToken:ID('j')
                        HaxePsiToken:=>('=>')
                        ARRAY_ACCESS_EXPRESSION
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              HaxePsiToken:ID('words')
                          HaxePsiToken:[('[')
                          MULTIPLICATIVE_EXPRESSION
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                HaxePsiToken:ID('i')
                            HaxePsiToken:%('%')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                HaxePsiToken:ID('j')
                          HaxePsiToken:](']')
                  HaxePsiToken:](']')
            HaxePsiToken:;(';')
          HaxePsiToken:}('}')
    HaxePsiToken:}('}')