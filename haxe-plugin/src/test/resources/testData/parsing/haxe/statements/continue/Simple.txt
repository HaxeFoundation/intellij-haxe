Haxe File
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('Simple')
    HaxePsiToken:{('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('foo')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          LOCAL_VAR_DECLARATION_LIST
            HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('i')
              VAR_INIT
                HaxePsiToken:=('=')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
            HaxePsiToken:;(';')
          WHILE_STATEMENT
            HaxePsiToken:while('while')
            HaxePsiToken:(('(')
            COMPARE_EXPRESSION
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('i')
              COMPARE_OPERATION
                HaxePsiToken:<('<')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('10')
            HaxePsiToken:)(')')
            BLOCK_STATEMENT
              HaxePsiToken:{('{')
              PREFIX_EXPRESSION
                HaxePsiToken:++('++')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('i')
              HaxePsiToken:;(';')
              IF_STATEMENT
                HaxePsiToken:if('if')
                HaxePsiToken:(('(')
                COMPARE_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('i')
                  COMPARE_OPERATION
                    HaxePsiToken:<('<')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('5')
                HaxePsiToken:)(')')
                CONTINUE_STATEMENT
                  HaxePsiToken:continue('continue')
                  HaxePsiToken:;(';')
              PREFIX_EXPRESSION
                HaxePsiToken:++('++')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('i')
              HaxePsiToken:;(';')
              HaxePsiToken:}('}')
          HaxePsiToken:}('}')
    HaxePsiToken:}('}')