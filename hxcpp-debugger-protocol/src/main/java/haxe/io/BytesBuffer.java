/*
 * Copyright 2000-2013 JetBrains s.r.o.
 * Copyright 2014-2018 AS3Boyan
 * Copyright 2014-2014 Elias Ku
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Haxe 3.4.7
package haxe.io;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class BytesBuffer extends haxe.lang.HxObject
{
	public BytesBuffer(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public BytesBuffer()
	{
		//line 45 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		BytesBuffer.__hx_ctor_haxe_io_BytesBuffer(this);
	}
	
	
	public static void __hx_ctor_haxe_io_BytesBuffer(BytesBuffer __hx_this)
	{
		//line 58 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		__hx_this.b = new java.io.ByteArrayOutputStream();
	}
	
	
	public java.io.ByteArrayOutputStream b;
	
	
	
	public Bytes getBytes()
	{
		//line 204 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		byte[] buf = this.b.toByteArray();
		//line 205 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		Bytes bytes = new Bytes(buf.length, buf);
		//line 214 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		this.b = null;
		//line 215 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		return bytes;
	}
	
	
	@Override public Object __hx_setField(String field, Object value, boolean handleProperties)
	{
		//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		{
			//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
			boolean __temp_executeDef1 = true;
			//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
			switch (field.hashCode())
			{
				case 98:
				{
					//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
					if (field.equals("b")) 
					{
						//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
						__temp_executeDef1 = false;
						//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
						this.b = ((java.io.ByteArrayOutputStream) (value) );
						//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
						return value;
					}
					
					//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
					break;
				}
				
				
			}
			
			//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
			if (__temp_executeDef1) 
			{
				//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public Object __hx_getField(String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		{
			//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
			boolean __temp_executeDef1 = true;
			//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
			switch (field.hashCode())
			{
				case 1950049973:
				{
					//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
					if (field.equals("getBytes")) 
					{
						//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
						__temp_executeDef1 = false;
						//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getBytes")) );
					}
					
					//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
					break;
				}
				
				
				case 98:
				{
					//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
					if (field.equals("b")) 
					{
						//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
						__temp_executeDef1 = false;
						//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
						return this.b;
					}
					
					//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
					break;
				}
				
				
			}
			
			//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
			if (__temp_executeDef1) 
			{
				//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public Object __hx_invokeField(String field, haxe.root.Array dynargs)
	{
		//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		{
			//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
			boolean __temp_executeDef1 = true;
			//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
			switch (field.hashCode())
			{
				case 1950049973:
				{
					//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
					if (field.equals("getBytes")) 
					{
						//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
						__temp_executeDef1 = false;
						//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
						return this.getBytes();
					}
					
					//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
					break;
				}
				
				
			}
			
			//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
			if (__temp_executeDef1) 
			{
				//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<String> baseArr)
	{
		//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		baseArr.push("length");
		//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		baseArr.push("b");
		//line 24 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


