/*
 * Copyright 2000-2013 JetBrains s.r.o.
 * Copyright 2014-2018 AS3Boyan
 * Copyright 2014-2014 Elias Ku
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Haxe 3.4.7
package haxe.lang;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class ParamEnum extends Enum
{
	public ParamEnum(int index, Object[] params)
	{
		//line 101 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		super(index);
		//line 102 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		this.params = params;
	}
	
	
	public final Object[] params;
	
	@Override public haxe.root.Array<Object> getParams()
	{
		//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		if (( this.params == null )) 
		{
			//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			return new haxe.root.Array<Object>(new Object[]{});
		}
		else
		{
			//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			Object[] this1 = this.params;
			//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			haxe.root.Array a = new haxe.root.Array();
			//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			int len = ((Object[]) (this1) ).length;
			//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			{
				//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				int _g1 = 0;
				//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				int _g = len;
				//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				while (( _g1 < _g ))
				{
					//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
					int i = _g1++;
					//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
					a.__set(i, ((Object) (((Object[]) (this1) )[i]) ));
				}
				
			}
			
			//line 107 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			return ((haxe.root.Array<Object>) (a) );
		}
		
	}
	
	
	@Override public String toString()
	{
		//line 112 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		if (( ( this.params == null ) || ( ((Object[]) (this.params) ).length == 0 ) ))
		{
			//line 112 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			return this.getTag();
		}
		
		//line 113 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		haxe.root.StringBuf ret = new haxe.root.StringBuf();
		//line 114 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		ret.add(Runtime.toString(this.getTag()));
		//line 114 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		ret.add(Runtime.toString("("));
		//line 115 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		boolean first = true;
		//line 116 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		{
			//line 116 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			int _g = 0;
			//line 116 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			Object[] _g1 = this.params;
			//line 116 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			while (( _g < ((Object[]) (_g1) ).length ))
			{
				//line 116 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				Object p = ((Object) (((Object[]) (_g1) )[_g]) );
				//line 116 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				 ++ _g;
				//line 118 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				if (first) 
				{
					//line 119 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
					first = false;
				}
				else
				{
					//line 121 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
					ret.add(Runtime.toString(","));
				}
				
				//line 122 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				ret.add(((Object) (p) ));
			}
			
		}
		
		//line 124 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		ret.add(Runtime.toString(")"));
		//line 125 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		return ret.toString();
	}
	
	
	@Override public boolean equals(Object obj)
	{
		//line 130 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		if (Runtime.eq(obj, this))
		{
			//line 131 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			return true;
		}
		
		//line 132 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		ParamEnum obj1 = ( (( obj instanceof ParamEnum )) ? (((ParamEnum) (obj) )) : (null) );
		//line 133 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		boolean ret = ( ( ( obj1 != null ) && haxe.root.Std.is(obj1, haxe.root.Type.getEnum(((Object) (this) ))) ) && ( obj1.index == this.index ) );
		//line 134 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		if ( ! (ret) ) 
		{
			//line 135 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			return false;
		}
		
		//line 136 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		if (( obj1.params == this.params )) 
		{
			//line 137 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			return true;
		}
		
		//line 138 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		int len = 0;
		//line 139 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		boolean tmp = false;
		//line 139 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		if ( ! ((( ( obj1.params == null ) || ( this.params == null ) ))) ) 
		{
			//line 139 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			len = ((Object[]) (this.params) ).length;
			//line 139 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			tmp = ( len != ((Object[]) (obj1.params) ).length );
		}
		else
		{
			//line 139 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			tmp = true;
		}
		
		//line 139 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		if (tmp) 
		{
			//line 140 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			return false;
		}
		
		//line 141 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		{
			//line 141 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			int _g1 = 0;
			//line 141 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			int _g = len;
			//line 141 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			while (( _g1 < _g ))
			{
				//line 141 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				int i = _g1++;
				//line 143 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				if ( ! (((boolean) (haxe.root.Type.enumEq(((Object) (((Object[]) (obj1.params) )[i]) ), ((Object) (((Object[]) (this.params) )[i]) ))) )) )
				{
					//line 144 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
					return false;
				}
				
			}
			
		}
		
		//line 146 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		return true;
	}
	
	
	@Override public int hashCode()
	{
		//line 151 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		int h = 19;
		//line 152 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		if (( this.params != null )) 
		{
			//line 152 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			int _g = 0;
			//line 152 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			Object[] _g1 = this.params;
			//line 152 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			while (( _g < ((Object[]) (_g1) ).length ))
			{
				//line 152 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				Object p = ((Object) (((Object[]) (_g1) )[_g]) );
				//line 152 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				 ++ _g;
				//line 154 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				h *= 31;
				//line 155 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				if (( ! (( p == null )) )) 
				{
					//line 156 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
					h = ((int) (Runtime.toInt(((Object) (Runtime.plus(h, p.hashCode())) ))) );
				}
				
			}
			
		}
		
		//line 158 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		h += this.index;
		//line 159 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		return h;
	}
	
	
}


