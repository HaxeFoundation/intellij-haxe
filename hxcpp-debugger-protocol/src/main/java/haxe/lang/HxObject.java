/*
 * Copyright 2000-2013 JetBrains s.r.o.
 * Copyright 2014-2018 AS3Boyan
 * Copyright 2014-2014 Elias Ku
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Haxe 3.4.7
package haxe.lang;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class HxObject implements haxe.lang.IHxObject
{
	public HxObject(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public HxObject()
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		HxObject.__hx_ctor_haxe_lang_HxObject(this);
	}
	
	
	public static void __hx_ctor_haxe_lang_HxObject(HxObject __hx_this)
	{
	}
	
	
	public boolean __hx_deleteField(String field)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		return false;
	}
	
	
	public Object __hx_lookupField(String field, boolean throwErrors, boolean isCheck)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		if (isCheck) 
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			return Runtime.undefined;
		}
		else
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			if (throwErrors) 
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				throw haxe.lang.HaxeException.wrap("Field not found.");
			}
			else
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				return null;
			}
			
		}
		
	}
	
	
	public double __hx_lookupField_f(String field, boolean throwErrors)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		if (throwErrors) 
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			throw haxe.lang.HaxeException.wrap("Field not found or incompatible field type.");
		}
		else
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			return 0.0;
		}
		
	}
	
	
	public Object __hx_lookupSetField(String field, Object value)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		throw haxe.lang.HaxeException.wrap("Cannot access field for writing.");
	}
	
	
	public double __hx_lookupSetField_f(String field, double value)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		throw haxe.lang.HaxeException.wrap("Cannot access field for writing or incompatible type.");
	}
	
	
	public double __hx_setField_f(String field, double value, boolean handleProperties)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				return this.__hx_lookupSetField_f(field, value);
			}
			
		}
		
	}
	
	
	public Object __hx_setField(String field, Object value, boolean handleProperties)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				return this.__hx_lookupSetField(field, value);
			}
			
		}
		
	}
	
	
	public Object __hx_getField(String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				return this.__hx_lookupField(field, throwErrors, isCheck);
			}
			
		}
		
	}
	
	
	public double __hx_getField_f(String field, boolean throwErrors, boolean handleProperties)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				return this.__hx_lookupField_f(field, throwErrors);
			}
			
		}
		
	}
	
	
	public Object __hx_invokeField(String field, haxe.root.Array dynargs)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
				return ((Function) (this.__hx_getField(field, true, false, false)) ).__hx_invokeDynamic(dynargs);
			}
			
		}
		
	}
	
	
	public void __hx_getFields(haxe.root.Array<String> baseArr)
	{
	}
	
	
}


