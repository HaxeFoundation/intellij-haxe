/*
 * Copyright 2000-2013 JetBrains s.r.o.
 * Copyright 2014-2018 AS3Boyan
 * Copyright 2014-2014 Elias Ku
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Haxe 3.4.7
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class List<T> extends haxe.lang.HxObject
{
	public List(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public List()
	{
		//line 43 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		List.__hx_ctor__List(((List<T>) (this) ));
	}
	
	
	public static <T_c> void __hx_ctor__List(List<T_c> __hx_this)
	{
		//line 44 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		__hx_this.length = 0;
	}
	
	
	public _List.ListNode<T> h;
	
	public _List.ListNode<T> q;
	
	public int length;
	
	public void add(T item)
	{
		//line 53 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		_List.ListNode<T> x = new _List.ListNode<T>(item, null);
		//line 54 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		if (( this.h == null )) 
		{
			//line 55 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			this.h = x;
		}
		else
		{
			//line 57 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			this.q.next = x;
		}
		
		//line 58 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		this.q = x;
		//line 59 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		this.length++;
	}
	
	
	@Override public double __hx_setField_f(String field, double value, boolean handleProperties)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			boolean __temp_executeDef1 = true;
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			switch (field.hashCode())
			{
				case -1106363674:
				{
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					if (field.equals("length")) 
					{
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						__temp_executeDef1 = false;
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						this.length = ((int) (value) );
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						return value;
					}
					
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					break;
				}
				
				
			}
			
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			if (__temp_executeDef1) 
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public Object __hx_setField(String field, Object value, boolean handleProperties)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			boolean __temp_executeDef1 = true;
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			switch (field.hashCode())
			{
				case -1106363674:
				{
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					if (field.equals("length")) 
					{
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						__temp_executeDef1 = false;
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						this.length = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						return value;
					}
					
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					break;
				}
				
				
				case 104:
				{
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					if (field.equals("h")) 
					{
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						__temp_executeDef1 = false;
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						this.h = ((_List.ListNode<T>) (value) );
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						return value;
					}
					
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					break;
				}
				
				
				case 113:
				{
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					if (field.equals("q")) 
					{
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						__temp_executeDef1 = false;
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						this.q = ((_List.ListNode<T>) (value) );
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						return value;
					}
					
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					break;
				}
				
				
			}
			
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			if (__temp_executeDef1) 
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public Object __hx_getField(String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			boolean __temp_executeDef1 = true;
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			switch (field.hashCode())
			{
				case 96417:
				{
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					if (field.equals("add")) 
					{
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						__temp_executeDef1 = false;
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "add")) );
					}
					
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					break;
				}
				
				
				case 104:
				{
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					if (field.equals("h")) 
					{
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						__temp_executeDef1 = false;
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						return this.h;
					}
					
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					break;
				}
				
				
				case -1106363674:
				{
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					if (field.equals("length")) 
					{
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						__temp_executeDef1 = false;
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						return this.length;
					}
					
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					break;
				}
				
				
				case 113:
				{
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					if (field.equals("q")) 
					{
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						__temp_executeDef1 = false;
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						return this.q;
					}
					
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					break;
				}
				
				
			}
			
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			if (__temp_executeDef1) 
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(String field, boolean throwErrors, boolean handleProperties)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			boolean __temp_executeDef1 = true;
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			switch (field.hashCode())
			{
				case -1106363674:
				{
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					if (field.equals("length")) 
					{
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						__temp_executeDef1 = false;
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						return ((double) (this.length) );
					}
					
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					break;
				}
				
				
			}
			
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			if (__temp_executeDef1) 
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public Object __hx_invokeField(String field, haxe.root.Array dynargs)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		{
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			boolean __temp_executeDef1 = true;
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			switch (field.hashCode())
			{
				case 96417:
				{
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					if (field.equals("add")) 
					{
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						__temp_executeDef1 = false;
						//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
						this.add(((T) (dynargs.__get(0)) ));
					}
					
					//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
					break;
				}
				
				
			}
			
			//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
			if (__temp_executeDef1) 
			{
				//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<String> baseArr)
	{
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		baseArr.push("length");
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		baseArr.push("q");
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		baseArr.push("h");
		//line 30 "C:\\HaxeToolkit\\haxe\\std\\List.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


