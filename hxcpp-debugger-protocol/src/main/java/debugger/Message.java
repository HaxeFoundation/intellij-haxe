/*
 * Copyright 2000-2013 JetBrains s.r.o.
 * Copyright 2014-2018 AS3Boyan
 * Copyright 2014-2014 Elias Ku
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Haxe 3.4.7
package debugger;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Message extends haxe.lang.ParamEnum
{
	public Message(int index, Object[] params)
	{
		//line 99 "C:\\HaxeToolkit\\haxe\\std\\java\\internal\\HxObject.hx"
		super(index, params);
	}
	
	
	public static final String[] __hx_constructs = new String[]{"ErrorInternal", "ErrorNoSuchThread", "ErrorNoSuchFile", "ErrorNoSuchBreakpoint", "ErrorBadClassNameRegex", "ErrorBadFunctionNameRegex", "ErrorNoMatchingFunctions", "ErrorBadCount", "ErrorCurrentThreadNotStopped", "ErrorEvaluatingExpression", "OK", "Exited", "Detached", "Files", "AllClasses", "Classes", "MemBytes", "Compacted", "Collected", "ThreadLocation", "FileLineBreakpointNumber", "ClassFunctionBreakpointNumber", "Breakpoints", "BreakpointDescription", "BreakpointStatuses", "ThreadsWhere", "Variables", "Value", "Structured", "ThreadCreated", "ThreadTerminated", "ThreadStarted", "ThreadStopped"};
	
	public static Message ErrorInternal(String details)
	{
		//line 340 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(0, new Object[]{details});
	}
	
	
	public static Message ErrorNoSuchThread(int number)
	{
		//line 341 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(1, new Object[]{number});
	}
	
	
	public static Message ErrorNoSuchFile(String fileName)
	{
		//line 342 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(2, new Object[]{fileName});
	}
	
	
	public static Message ErrorNoSuchBreakpoint(int number)
	{
		//line 343 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(3, new Object[]{number});
	}
	
	
	public static Message ErrorBadClassNameRegex(String details)
	{
		//line 344 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(4, new Object[]{details});
	}
	
	
	public static Message ErrorBadFunctionNameRegex(String details)
	{
		//line 345 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(5, new Object[]{details});
	}
	
	
	public static Message ErrorNoMatchingFunctions(String className, String functionName, debugger.StringList unresolvableClasses)
	{
		//line 346 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(6, new Object[]{className, functionName, unresolvableClasses});
	}
	
	
	public static Message ErrorBadCount(int count)
	{
		//line 348 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(7, new Object[]{count});
	}
	
	
	public static Message ErrorCurrentThreadNotStopped(int threadNumber)
	{
		//line 349 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(8, new Object[]{threadNumber});
	}
	
	
	public static Message ErrorEvaluatingExpression(String details)
	{
		//line 350 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(9, new Object[]{details});
	}
	
	
	public static final Message OK = new Message(10, null);
	
	public static final Message Exited = new Message(11, null);
	
	public static final Message Detached = new Message(12, null);
	
	public static Message Files(debugger.StringList list)
	{
		//line 356 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(13, new Object[]{list});
	}
	
	
	public static Message AllClasses(debugger.StringList list)
	{
		//line 357 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(14, new Object[]{list});
	}
	
	
	public static Message Classes(debugger.ClassList list)
	{
		//line 358 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(15, new Object[]{list});
	}
	
	
	public static Message MemBytes(int bytes)
	{
		//line 359 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(16, new Object[]{bytes});
	}
	
	
	public static Message Compacted(int bytesBefore, int bytesAfter)
	{
		//line 360 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(17, new Object[]{bytesBefore, bytesAfter});
	}
	
	
	public static Message Collected(int bytesBefore, int bytesAfter)
	{
		//line 361 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(18, new Object[]{bytesBefore, bytesAfter});
	}
	
	
	public static Message ThreadLocation(int number, int stackFrame, String className, String functionName, String fileName, int lineNumber)
	{
		//line 362 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(19, new Object[]{number, stackFrame, className, functionName, fileName, lineNumber});
	}
	
	
	public static Message FileLineBreakpointNumber(int number)
	{
		//line 364 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(20, new Object[]{number});
	}
	
	
	public static Message ClassFunctionBreakpointNumber(int number, debugger.StringList unresolvableClasses)
	{
		//line 365 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(21, new Object[]{number, unresolvableClasses});
	}
	
	
	public static Message Breakpoints(debugger.BreakpointList list)
	{
		//line 367 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(22, new Object[]{list});
	}
	
	
	public static Message BreakpointDescription(int number, debugger.BreakpointLocationList list)
	{
		//line 368 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(23, new Object[]{number, list});
	}
	
	
	public static Message BreakpointStatuses(debugger.BreakpointStatusList list)
	{
		//line 369 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(24, new Object[]{list});
	}
	
	
	public static Message ThreadsWhere(debugger.ThreadWhereList list)
	{
		//line 370 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(25, new Object[]{list});
	}
	
	
	public static Message Variables(debugger.StringList list)
	{
		//line 371 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(26, new Object[]{list});
	}
	
	
	public static Message Value(String expression, String type, String value)
	{
		//line 372 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(27, new Object[]{expression, type, value});
	}
	
	
	public static Message Structured(debugger.StructuredValue structuredValue)
	{
		//line 373 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(28, new Object[]{structuredValue});
	}
	
	
	public static Message ThreadCreated(int number)
	{
		//line 376 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(29, new Object[]{number});
	}
	
	
	public static Message ThreadTerminated(int number)
	{
		//line 377 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(30, new Object[]{number});
	}
	
	
	public static Message ThreadStarted(int number)
	{
		//line 378 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(31, new Object[]{number});
	}
	
	
	public static Message ThreadStopped(int number, int stackFrame, String className, String functionName, String fileName, int lineNumber)
	{
		//line 379 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return new Message(32, new Object[]{number, stackFrame, className, functionName, fileName, lineNumber});
	}
	
	
	@Override public String getTag()
	{
		//line 337 "C:\\HaxeToolkit\\haxe\\lib\\hxcpp-debugger\\git\\debugger\\IController.hx"
		return Message.__hx_constructs[this.index];
	}
	
	
}


