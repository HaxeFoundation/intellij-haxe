// Generated by Haxe 4.3.0
package haxe.ds;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class ObjectMap<K, V> extends haxe.lang.HxObject implements haxe.IMap<K, V>
{
	public ObjectMap(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public ObjectMap()
	{
		//line 62 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		haxe.ds.ObjectMap.__hx_ctor_haxe_ds_ObjectMap(((haxe.ds.ObjectMap<K, V>) (this) ));
		//line 62 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		java.lang.Object __temp_expr1 = ((java.lang.Object) (null) );
	}
	
	
	protected static <K_c, V_c> void __hx_ctor_haxe_ds_ObjectMap(haxe.ds.ObjectMap<K_c, V_c> __hx_this)
	{
		//line 64 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		__hx_this.cachedIndex = -1;
	}
	
	
	public int[] hashes;
	
	public K[] _keys;
	
	public V[] vals;
	
	public int nBuckets;
	
	public int size;
	
	public int nOccupied;
	
	public int upperBound;
	
	public K cachedKey;
	
	public int cachedIndex;
	
	public void set(K key, V value)
	{
		//line 69 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		int x = 0;
		//line 69 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		int k = 0;
		//line 70 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		if (( this.nOccupied >= this.upperBound )) 
		{
			//line 71 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( this.nBuckets > ( this.size << 1 ) )) 
			{
				//line 72 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				this.resize(( this.nBuckets - 1 ));
			}
			else
			{
				//line 74 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				this.resize(( this.nBuckets + 2 ));
			}
			
		}
		
		//line 77 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		int[] hashes = this.hashes;
		//line 77 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		K[] keys = this._keys;
		//line 77 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		int[] hashes1 = hashes;
		//line 78 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		{
			//line 79 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int mask = ( (( this.nBuckets == 0 )) ? (0) : (( this.nBuckets - 1 )) );
			//line 80 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			x = this.nBuckets;
			//line 80 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int site = x;
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int k1 = ((java.lang.Object) (((java.lang.Object) (key) )) ).hashCode();
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k1 = ( ( k1 + 2127912214 ) + (( k1 << 12 )) );
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k1 = ( ( k1 ^ -949894596 ) ^ ( k1 >> 19 ) );
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k1 = ( ( k1 + 374761393 ) + (( k1 << 5 )) );
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k1 = ( ( k1 + (-744332180) ) ^ ( k1 << 9 ) );
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k1 = ( ( k1 + (-42973499) ) + (( k1 << 3 )) );
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k1 = ( ( k1 ^ -1252372727 ) ^ ( k1 >> 16 ) );
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int ret = k1;
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( (( ret & -2 )) == 0 )) 
			{
				//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				if (( ret == 0 )) 
				{
					//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					ret = 2;
				}
				else
				{
					//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					ret = -1;
				}
				
			}
			
			//line 81 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k = ret;
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int i = ( k & mask );
			//line 82 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int nProbes = 0;
			//line 84 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int delKey = -1;
			//line 86 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( hashes1[i] == 0 )) 
			{
				//line 87 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				x = i;
			}
			else
			{
				//line 90 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				int last = i;
				//line 90 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				int flag = 0;
				//line 91 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				while (true)
				{
					//line 91 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					flag = hashes1[i];
					//line 91 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					if (( ( flag == 0 ) || ( ( flag == k ) && ((java.lang.Object) (((java.lang.Object) (keys[i]) )) ).equals(((java.lang.Object) (key) )) ) )) 
					{
						//line 91 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					//line 92 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					if (( ( flag == 1 ) && ( delKey == -1 ) )) 
					{
						//line 93 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						delKey = i;
					}
					
					//line 94 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					i = ( ( i +  ++ nProbes ) & mask );
				}
				
				//line 102 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				if (( ( flag == 0 ) && ( delKey != -1 ) )) 
				{
					//line 103 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					x = delKey;
				}
				else
				{
					//line 105 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					x = i;
				}
				
			}
			
		}
		
		//line 115 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		int flag1 = hashes1[x];
		//line 116 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		if (( flag1 == 0 )) 
		{
			//line 117 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			keys[x] = key;
			//line 118 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.vals[x] = value;
			//line 119 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			hashes1[x] = k;
			//line 120 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.size++;
			//line 121 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.nOccupied++;
		}
		else
		{
			//line 122 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( flag1 == 1 )) 
			{
				//line 123 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				keys[x] = key;
				//line 124 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				this.vals[x] = value;
				//line 125 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				hashes1[x] = k;
				//line 126 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				this.size++;
			}
			else
			{
				//line 129 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				this.vals[x] = value;
			}
			
		}
		
		//line 133 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		this.cachedIndex = x;
		//line 134 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		this.cachedKey = key;
	}
	
	
	public int lookup(K key)
	{
		//line 139 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		if (( this.nBuckets != 0 )) 
		{
			//line 140 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int[] hashes = this.hashes;
			//line 140 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			K[] keys = this._keys;
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int mask = ( this.nBuckets - 1 );
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int k = ((java.lang.Object) (((java.lang.Object) (key) )) ).hashCode();
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k = ( ( k + 2127912214 ) + (( k << 12 )) );
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k = ( ( k ^ -949894596 ) ^ ( k >> 19 ) );
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k = ( ( k + 374761393 ) + (( k << 5 )) );
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k = ( ( k + (-744332180) ) ^ ( k << 9 ) );
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k = ( ( k + (-42973499) ) + (( k << 3 )) );
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			k = ( ( k ^ -1252372727 ) ^ ( k >> 16 ) );
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int ret = k;
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( (( ret & -2 )) == 0 )) 
			{
				//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				if (( ret == 0 )) 
				{
					//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					ret = 2;
				}
				else
				{
					//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					ret = -1;
				}
				
			}
			
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int hash = ret;
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int k1 = hash;
			//line 142 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int nProbes = 0;
			//line 143 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int i = ( k1 & mask );
			//line 144 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int last = i;
			//line 144 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int flag = 0;
			//line 146 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			while (true)
			{
				//line 146 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				flag = hashes[i];
				//line 146 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				if ( ! ((( ( flag != 0 ) && (( ( ( flag == 1 ) || ( flag != k1 ) ) ||  ! (((java.lang.Object) (((java.lang.Object) (keys[i]) )) ).equals(((java.lang.Object) (key) )))  )) ))) ) 
				{
					//line 146 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					break;
				}
				
				//line 147 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				i = ( ( i +  ++ nProbes ) & mask );
			}
			
			//line 160 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( (( flag & -2 )) == 0 )) 
			{
				//line 160 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				return -1;
			}
			else
			{
				//line 160 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				return i;
			}
			
		}
		
		//line 163 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		return -1;
	}
	
	
	public void resize(int newNBuckets)
	{
		//line 168 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		int[] newHash = null;
		//line 169 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		int j = 1;
		//line 170 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		{
			//line 171 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int x = newNBuckets;
			//line 171 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			 -- x;
			//line 171 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			x |= ( x >>> 1 );
			//line 171 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			x |= ( x >>> 2 );
			//line 171 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			x |= ( x >>> 4 );
			//line 171 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			x |= ( x >>> 8 );
			//line 171 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			x |= ( x >>> 16 );
			//line 171 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			 ++ x;
			//line 171 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			newNBuckets = x;
			//line 172 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( newNBuckets < 4 )) 
			{
				//line 173 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				newNBuckets = 4;
			}
			
			//line 174 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( this.size >= ( ( newNBuckets * 0.77 ) + 0.5 ) )) 
			{
				//line 176 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				j = 0;
			}
			else
			{
				//line 178 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				int nfSize = newNBuckets;
				//line 179 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				newHash = new int[nfSize];
				//line 180 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				if (( this.nBuckets < newNBuckets )) 
				{
					//line 182 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					K[] k = ((K[]) (((java.lang.Object) (new java.lang.Object[newNBuckets]) )) );
					//line 183 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					if (( this._keys != null )) 
					{
						//line 184 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						java.lang.System.arraycopy(((java.lang.Object) (this._keys) ), ((int) (0) ), ((java.lang.Object) (k) ), ((int) (0) ), ((int) (this.nBuckets) ));
					}
					
					//line 185 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					this._keys = k;
					//line 187 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					V[] v = ((V[]) (((java.lang.Object) (new java.lang.Object[newNBuckets]) )) );
					//line 188 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					if (( this.vals != null )) 
					{
						//line 189 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						java.lang.System.arraycopy(((java.lang.Object) (this.vals) ), ((int) (0) ), ((java.lang.Object) (v) ), ((int) (0) ), ((int) (this.nBuckets) ));
					}
					
					//line 190 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					this.vals = v;
				}
				
			}
			
		}
		
		//line 195 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		if (( j != 0 )) 
		{
			//line 198 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.cachedKey = null;
			//line 199 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.cachedIndex = -1;
			//line 202 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			j = -1;
			//line 203 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int nBuckets = this.nBuckets;
			//line 203 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			K[] _keys = this._keys;
			//line 203 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			V[] vals = this.vals;
			//line 203 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int[] hashes = this.hashes;
			//line 208 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			int newMask = ( newNBuckets - 1 );
			//line 209 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			while ((  ++ j < nBuckets ))
			{
				//line 210 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				int k1 = hashes[j];
				//line 211 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				if (( (( k1 & -2 )) != 0 )) 
				{
					//line 212 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					K key = _keys[j];
					//line 213 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					V val = vals[j];
					//line 215 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					_keys[j] = null;
					//line 216 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					vals[j] = null;
					//line 217 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					hashes[j] = 1;
					//line 218 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					while (true)
					{
						//line 220 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						int nProbes = 0;
						//line 222 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						int i = ( k1 & newMask );
						//line 224 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						while (( newHash[i] != 0 ))
						{
							//line 225 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							i = ( ( i +  ++ nProbes ) & newMask );
						}
						
						//line 227 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						newHash[i] = k1;
						//line 229 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						boolean tmp = false;
						//line 229 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (( i < nBuckets )) 
						{
							//line 229 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							k1 = hashes[i];
							//line 229 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							tmp = ( (( k1 & -2 )) != 0 );
						}
						else
						{
							//line 229 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							tmp = false;
						}
						
						//line 229 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (tmp) 
						{
							//line 231 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							{
								//line 232 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
								K tmp1 = _keys[i];
								//line 233 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
								_keys[i] = key;
								//line 234 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
								key = tmp1;
							}
							
							//line 235 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							{
								//line 236 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
								V tmp2 = vals[i];
								//line 237 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
								vals[i] = val;
								//line 238 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
								val = tmp2;
							}
							
							//line 241 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							hashes[i] = 1;
						}
						else
						{
							//line 243 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							_keys[i] = key;
							//line 244 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							vals[i] = val;
							//line 245 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							break;
						}
						
					}
					
				}
				
			}
			
			//line 251 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( nBuckets > newNBuckets )) 
			{
				//line 253 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				{
					//line 254 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					K[] k2 = ((K[]) (((java.lang.Object) (new java.lang.Object[newNBuckets]) )) );
					//line 255 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					java.lang.System.arraycopy(((java.lang.Object) (_keys) ), ((int) (0) ), ((java.lang.Object) (k2) ), ((int) (0) ), ((int) (newNBuckets) ));
					//line 256 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					this._keys = k2;
				}
				
				//line 257 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				{
					//line 258 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					V[] v1 = ((V[]) (((java.lang.Object) (new java.lang.Object[newNBuckets]) )) );
					//line 259 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					java.lang.System.arraycopy(((java.lang.Object) (vals) ), ((int) (0) ), ((java.lang.Object) (v1) ), ((int) (0) ), ((int) (newNBuckets) ));
					//line 260 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
					this.vals = v1;
				}
				
			}
			
			//line 264 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.hashes = newHash;
			//line 265 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.nBuckets = newNBuckets;
			//line 266 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.nOccupied = this.size;
			//line 267 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.upperBound = ((int) (( ( newNBuckets * 0.77 ) + .5 )) );
		}
		
	}
	
	
	public V get(K key)
	{
		//line 272 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		int idx = -1;
		//line 274 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		boolean tmp = false;
		//line 274 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		if (haxe.lang.Runtime.eq(this.cachedKey, key)) 
		{
			//line 274 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			idx = this.cachedIndex;
			//line 274 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			tmp = ( idx != -1 );
		}
		else
		{
			//line 274 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			tmp = false;
		}
		
		//line 274 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		if (tmp) 
		{
			//line 275 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			return this.vals[idx];
		}
		
		//line 279 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		idx = this.lookup(key);
		//line 280 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		if (( idx != -1 )) 
		{
			//line 282 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.cachedKey = key;
			//line 283 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			this.cachedIndex = idx;
			//line 286 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			return this.vals[idx];
		}
		
		//line 289 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		return null;
	}
	
	
	public java.lang.Object keys()
	{
		//line 361 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		return new haxe.ds._ObjectMap.ObjectMapKeyIterator<K, V>(((haxe.ds.ObjectMap<K, V>) (this) ));
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		{
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( field != null )) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				switch (field.hashCode())
				{
					case 1005083856:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("cachedIndex")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.cachedIndex = ((int) (value) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 325636987:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("nBuckets")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.nBuckets = ((int) (value) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -553141795:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("cachedKey")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.cachedKey = ((K) (((java.lang.Object) (value) )) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((double) (haxe.lang.Runtime.toDouble(((java.lang.Object) (value) ))) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 3530753:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("size")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.size = ((int) (value) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -1690761732:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("upperBound")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.upperBound = ((int) (value) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -394102484:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("nOccupied")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.nOccupied = ((int) (value) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		{
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( field != null )) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				switch (field.hashCode())
				{
					case 1005083856:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("cachedIndex")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.cachedIndex = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -1224424900:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("hashes")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.hashes = ((int[]) (value) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -553141795:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("cachedKey")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.cachedKey = ((K) (value) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 91023059:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("_keys")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this._keys = ((K[]) (value) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -1690761732:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("upperBound")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.upperBound = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 3612018:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("vals")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.vals = ((V[]) (value) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -394102484:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("nOccupied")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.nOccupied = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 325636987:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("nBuckets")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.nBuckets = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 3530753:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("size")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.size = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return value;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		{
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( field != null )) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				switch (field.hashCode())
				{
					case 3288564:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("keys")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "keys")) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -1224424900:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("hashes")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.hashes;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 102230:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("get")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get")) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 91023059:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("_keys")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this._keys;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -934437708:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("resize")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "resize")) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 3612018:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("vals")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.vals;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -1097094790:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("lookup")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "lookup")) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 325636987:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("nBuckets")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.nBuckets;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 113762:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("set")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set")) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 3530753:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("size")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.size;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 1005083856:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("cachedIndex")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.cachedIndex;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -394102484:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("nOccupied")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.nOccupied;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -553141795:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("cachedKey")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.cachedKey;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -1690761732:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("upperBound")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.upperBound;
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		{
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( field != null )) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				switch (field.hashCode())
				{
					case 1005083856:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("cachedIndex")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((double) (this.cachedIndex) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 325636987:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("nBuckets")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((double) (this.nBuckets) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -553141795:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("cachedKey")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((double) (haxe.lang.Runtime.toDouble(((java.lang.Object) (this.cachedKey) ))) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 3530753:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("size")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((double) (this.size) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -1690761732:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("upperBound")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((double) (this.upperBound) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -394102484:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("nOccupied")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return ((double) (this.nOccupied) );
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		{
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (( field != null )) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				switch (field.hashCode())
				{
					case 3288564:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("keys")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.keys();
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 113762:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("set")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.set(((K) (dynargs[0]) ), ((V) (dynargs[1]) ));
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case 102230:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("get")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.get(((K) (dynargs[0]) ));
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -1097094790:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("lookup")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							return this.lookup(((K) (dynargs[0]) ));
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
					case -934437708:
					{
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						if (field.equals("resize")) 
						{
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							__temp_executeDef1 = false;
							//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
							this.resize(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		baseArr.push("cachedIndex");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		baseArr.push("cachedKey");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		baseArr.push("upperBound");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		baseArr.push("nOccupied");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		baseArr.push("size");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		baseArr.push("nBuckets");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		baseArr.push("vals");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		baseArr.push("_keys");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		baseArr.push("hashes");
		//line 27 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\haxe\\ds\\ObjectMap.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


