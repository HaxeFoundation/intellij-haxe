#
# Copyright 2000-2013 JetBrains s.r.o.
# Copyright 2014-2014 AS3Boyan
# Copyright 2014-2014 Elias Ku
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
haxe.title=Haxe
haxe.module.type.name=Haxe Module
haxe.module.type.description=Encapsulates core functionality for building <b>Haxe</b> applications. \
  Support running Haxe application in <b>Neko</b> virtual machine.
haxe.sdk.name.presentable=Haxe toolkit
runner.configuration.name=Haxe Application
haxe.sdk.name.suggest=Haxe {0}
haxe.run.exclude.compile=&Skip compilation
haxe.main.class=Main &class:
haxe.run.parameters=&Parameters:
haxe.run.module=&Module\:
haxe.run.target=&Target:
haxe.compiler.description=Haxe Compiler
haxe.language.id=Haxe
haxe.file.type.name=Haxe
haxe.file.type.description=Haxe Files
no.sdk.for.module=No SDK for module\: {0}
haxe.module.editor.haxe=Haxe
no.module.for.run.configuration=No module for Run Configuration {0}
action.create.new.class=Haxe Class
progress.creating.class=Creating Class {0}
haxe.run.wrong.target=Wrong target {0}\! You can run only Neko, Flash or JavaScript.
haxe.run.bad.neko.bin.path=No Neko\! Select Neko binary for you Haxe sdk.
choose.haxe.main.class=Choose Haxe Main class
neko.executable=&Neko executable\:
haxe.color.settings.description.line.comment=Line comment
haxe.color.settings.description.block.comment=Block comment
haxe.color.settings.description.doc.comment=Documentation comment
haxe.color.settings.description.keyword=Keyword
haxe.color.settings.description.number=Number
haxe.color.settings.description.string=String
haxe.color.settings.description.operator=Operator
haxe.color.settings.description.parenths=Parenths
haxe.color.settings.description.brackets=Brackets
haxe.color.settings.description.braces=Braces
haxe.color.settings.description.comma=Comma
haxe.color.settings.description.dot=Dot
haxe.color.settings.description.semicolon=Semicolon
haxe.color.settings.description.bad.character=Bad character
haxe.color.settings.description.class=Class
haxe.color.settings.description.interface=Interface
haxe.color.settings.description.instance.member.variable=Instance member variable
haxe.color.settings.description.instance.member.function=Instance member function
haxe.color.settings.description.static.member.function=Static member function
haxe.color.settings.description.static.member.variable=Static member variable
haxe.color.settings.description.parameter=Parameter
haxe.color.settings.description.local.variable=Local variable
haxe.output.file.name=&Output file name\:
haxe.output.folder=Output &folder\:
cannot.resolve.reference=Can't resolve reference
flex.sdk.not.specified=Flex SDK is required for Flash applications debugging. Please configure Flex SDK in Project Structure dialog.
flex.sdk.not.found=Flex SDK ''{0}'' not found. Please configure Flex SDK in Project Structure dialog.
haxe.proper.debug.targets=You can debug only flash or HXCPP targets\!
haxe.break.point.title=Haxe Breakpoints
flex.sdk.label=&Flex SDK for Flash applications debugging:
haxe.run.file.to.run=Custom file to &run
nme.nmml=NMML
nme.nmml.description=NMML project file
haxe.configuration.use.hxml.to.build=&HXML
haxe.configuration.use.nmml.to.build=&NMML
haxe.configuration.hxml.file=HXML file\:
haxe.configuration.nmml.file=NMML file\:
haxe.configuration.openfl.file=OpenFL file\:
haxe.run.no.module=No module for configuration\: {0}
haxe.run.select.custom.file=Select file to launch in case of using HXML
haxe.run.do.not.select.custom.file=You cannot launch custom file in case of using NME
haxe.run.do.not.select.custom.executable=You cannot use custom executable in case of using NME
overrides.method.in=Overrides method ''{0}'' in ''{1}''
implements.method.in=Implements method ''{0}'' in ''{1}''
haxe.override.method=Choose method to override
haxe.implement.method=Choose method to implement
fields.to.generate.getters=Select Fields to Generate Getters
fields.to.generate.setters=Select Fields to Generate Setters
fields.to.generate.getters.setters=Select Fields to Generate Getters and Setters
haxe.configuration.use.custon.properties=Haxe compiler\:
haxelib.executable=&Haxelib executable\:
haxe.compile.with=Compile with\:
sources.root.detector.sources.name=Library sources
sources.root.detector.classes.name=Library classes
create.nmml.file.action=NMML File
create.nmml.file.action.description=Create NMML File
haxe.unresolved.type=Unresolved type
choose.class.to.import.title=Choose Class To Import
add.import.multiple.candidates={0} ? (multiple choices...) Alt+Enter
autodetected.source.root.type=Haxe
macro.haxe.array.variable=haxeArrayVariable()
macro.haxe.variable.name=haxeSuggestVariableName()
macro.haxe.index.name=haxeSuggestIndexName()
livetemplate.description.iter=Iterate (for..in)
livetemplate.description.itar=Iterate elements of array
livetemplate.description.ritar=Iterate elements of array in reverse order
haxe.surrounder.if=if
haxe.surrounder.if.else=if / else
haxe.surrounder.while=while
haxe.surrounder.do.while=do / while
haxe.surrounder.try.catch=try / catch
haxe.settings.name=Haxe
haxe.conditional.compilation.defined.macros=Defined Haxe conditional compilation macros\:
haxe.conditional.compilation.title=Define Haxe Macros
haxe.conditional.compilation.macros=Conditional compilation macros\:
haxe.color.settings.description.conditional.compilation=Conditionally non-compiled
haxe.conditional.compilation.setting=Project Macros\:
haxe.settings.edit=Edit
haxe.intention.undefine=Undefine flag ''{0}''
haxe.intention.define=Define flag ''{0}''
quick.fixes.family=Haxe Quick Fixes
haxe.color.settings.description.conditional.compilation.defined.flag=Defined flag
haxe.color.settings.description.conditional.compilation.undefined.flag=Undefined Flag
haxe.project.reparsing=Applying new compiler macros...
refactoring.introduce.selection.error=Cannot perform refactoring using selected element(s)
refactoring.introduce.variable.dialog.title=Introduce Variable
install.flex.plugin=Please install Flex plugin to debug Flash target\!
enable.flex.plugin=Please enable Flex plugin to debug Flash target\!
hxcpp.port.label=HXCPP Debugging Port\:
hxcpp.debugging.description=Creates debug server that communicates with application across protocol supported by hxcpp.DebugSocket
haxe.inspections.group.name=Haxe
haxe.inspections.nme.build.directory=NMML Build Directory Inspection
haxe.inspections.nme.build.directory.descriptor=You need to provide separate build directories for release and debug builds
haxe.inspections.nme.build.directory.fix.name=Create debug tag
haxe.nme.arguments=NME arguments\:
haxe.openfl.arguments=OpenFL arguments\:
inspections.group.name=Haxe
haxe.inspection.unused.import.name=Unused import statement
haxe.fix.optimize.imports=Optimize imports
haxe.inspection.unresolved.symbol=Unresolved symbol
haxe.inspection.preprocessor.symbol.name=HaxePreprocessorInspection
haxe.inspection.preprocessor.symbol.long.name=Preprocessing Symbol Inspection
haxe.openfl.xmlproject=OpenFL Project XML \:

# HXML syntax support
hxml.language.id = HXML
hxml.file.type.name = HXML
hxml.file.type.description = Haxe Build Files

# HAXE tests

haxe.tests.runner.configuration.name=Haxe Tests
haxe.tests.run.module=&Module\:
haxe.tests.run.runner.class=&Runner Class\:
