Haxe File
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    HaxePsiToken:;(';')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('Test')
    CLASS_BODY
      HaxePsiToken:{('{')
      PsiComment(#if)('#if')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('(')
      PsiComment(PPEXPRESSION)('  ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('==')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('!=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('0')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('>')
      PsiComment(PPEXPRESSION)('  ')
      PsiComment(PPEXPRESSION)('0')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('0')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('<')
      PsiComment(PPEXPRESSION)('  ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('>=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('0')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('>=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('0')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('<=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('<=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('(')
      PsiComment(PPEXPRESSION)('!')
      PsiComment(PPEXPRESSION)('!')
      PsiComment(PPEXPRESSION)('1')
      PsiComment(PPEXPRESSION)(')')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('==')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('(')
      PsiComment(PPEXPRESSION)('!')
      PsiComment(PPEXPRESSION)('0')
      PsiComment(PPEXPRESSION)(')')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)(')')
      METHOD_DECLARATION
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('bar')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          HaxePsiToken:}('}')
      PsiComment(#end)('#end')
      PsiComment(#if)('#if')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('(')
      PsiComment(PPEXPRESSION)('  ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('==')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('!=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('mystr')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('>')
      PsiComment(PPEXPRESSION)('  ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('aa')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('<')
      PsiComment(PPEXPRESSION)('  ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('zz')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('>=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('>=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('aa')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('<=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('zz')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('<=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('(')
      PsiComment(PPEXPRESSION)('!')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('str')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(')')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('==')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('(')
      PsiComment(PPEXPRESSION)('!')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('zz')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(')')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)(')')
      METHOD_DECLARATION
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('foo')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          HaxePsiToken:}('}')
      PsiComment(#end)('#end')
      PsiComment(#if)('#if')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('(')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('true')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('==')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('true')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('false')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('!=')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('true')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)('&&')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('false')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('==')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('false')
      PsiComment(PPEXPRESSION)('\n     ')
      PsiComment(PPEXPRESSION)(')')
      METHOD_DECLARATION
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('asdf')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          HaxePsiToken:}('}')
      PsiComment(#end)('#end')
      PsiComment(#if)('#if')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('(')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('false')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('||')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)('false')
      PsiComment(PPEXPRESSION)('"')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('||')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)('0')
      PsiComment(PPEXPRESSION)(' ')
      PsiComment(PPEXPRESSION)(')')
      PsiComment(MSL_COMMENT)('// true because "false" is a non-empty string.')
      METHOD_DECLARATION
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('f')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          HaxePsiToken:}('}')
      PsiComment(#end)('#end')
      HaxePsiToken:}('}')