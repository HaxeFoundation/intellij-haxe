Haxe File
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('TryCatch')
    CLASS_BODY
      HaxePsiToken:{('{')
      METHOD_DECLARATION
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('foo')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          TRY_STATEMENT
            HaxePsiToken:try('try')
            BLOCK_STATEMENT
              HaxePsiToken:{('{')
              CALL_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('bar')
                HaxePsiToken:(('(')
                HaxePsiToken:)(')')
              HaxePsiToken:;(';')
              HaxePsiToken:}('}')
            CATCH_STATEMENT
              HaxePsiToken:catch('catch')
              HaxePsiToken:(('(')
              PARAMETER
                COMPONENT_NAME
                  IDENTIFIER
                    HaxePsiToken:ID('e')
                TYPE_TAG
                  HaxePsiToken::(':')
                  TYPE_OR_ANONYMOUS
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('String')
              HaxePsiToken:)(')')
              BLOCK_STATEMENT
                HaxePsiToken:{('{')
                CALL_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('trace')
                  HaxePsiToken:(('(')
                  EXPRESSION_LIST
                    STRING_LITERAL_EXPRESSION
                      HaxePsiToken:OPEN_QUOTE('"')
                      HaxePsiToken:REGULAR_STRING_PART('String')
                      HaxePsiToken:CLOSING_QUOTE('"')
                  HaxePsiToken:)(')')
                HaxePsiToken:;(';')
                HaxePsiToken:}('}')
            CATCH_STATEMENT
              HaxePsiToken:catch('catch')
              HaxePsiToken:(('(')
              PARAMETER
                COMPONENT_NAME
                  IDENTIFIER
                    HaxePsiToken:ID('e')
                TYPE_TAG
                  HaxePsiToken::(':')
                  TYPE_OR_ANONYMOUS
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('Error')
              HaxePsiToken:)(')')
              BLOCK_STATEMENT
                HaxePsiToken:{('{')
                CALL_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('trace')
                  HaxePsiToken:(('(')
                  EXPRESSION_LIST
                    STRING_LITERAL_EXPRESSION
                      HaxePsiToken:OPEN_QUOTE('"')
                      HaxePsiToken:REGULAR_STRING_PART('Error')
                      HaxePsiToken:CLOSING_QUOTE('"')
                  HaxePsiToken:)(')')
                HaxePsiToken:;(';')
                HaxePsiToken:}('}')
            CATCH_STATEMENT
              HaxePsiToken:catch('catch')
              HaxePsiToken:(('(')
              PARAMETER
                COMPONENT_NAME
                  IDENTIFIER
                    HaxePsiToken:ID('e')
                TYPE_TAG
                  HaxePsiToken::(':')
                  TYPE_OR_ANONYMOUS
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('Dynamic')
              HaxePsiToken:)(')')
              BLOCK_STATEMENT
                HaxePsiToken:{('{')
                CALL_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('trace')
                  HaxePsiToken:(('(')
                  EXPRESSION_LIST
                    STRING_LITERAL_EXPRESSION
                      HaxePsiToken:OPEN_QUOTE('"')
                      HaxePsiToken:REGULAR_STRING_PART('Dynamic')
                      HaxePsiToken:CLOSING_QUOTE('"')
                  HaxePsiToken:)(')')
                HaxePsiToken:;(';')
                HaxePsiToken:}('}')
          HaxePsiToken:}('}')
      HaxePsiToken:}('}')