Haxe File
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    HaxePsiToken:;(';')
  ENUM_DECLARATION
    HaxePsiToken:enum('enum')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('Test')
    ENUM_BODY
      HaxePsiToken:{('{')
      ENUM_VALUE_DECLARATION
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('TString')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                HaxePsiToken:ID('s')
            TYPE_TAG
              HaxePsiToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('String')
        HaxePsiToken:)(')')
        HaxePsiToken:;(';')
      ENUM_VALUE_DECLARATION
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('TInt')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                HaxePsiToken:ID('i')
            TYPE_TAG
              HaxePsiToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('Int')
        HaxePsiToken:)(')')
        HaxePsiToken:;(';')
      HaxePsiToken:}('}')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('SwitchExtractorExpression')
    CLASS_BODY
      HaxePsiToken:{('{')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('test')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('e')
              VAR_INIT
                HaxePsiToken:=('=')
                CALL_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('TString')
                  HaxePsiToken:(('(')
                  EXPRESSION_LIST
                    STRING_LITERAL_EXPRESSION
                      HaxePsiToken:OPEN_QUOTE('"')
                      HaxePsiToken:REGULAR_STRING_PART('fOo')
                      HaxePsiToken:CLOSING_QUOTE('"')
                  HaxePsiToken:)(')')
            HaxePsiToken:;(';')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('success')
              VAR_INIT
                HaxePsiToken:=('=')
                VALUE_EXPRESSION
                  SWITCH_STATEMENT
                    HaxePsiToken:switch('switch')
                    PARENTHESIZED_EXPRESSION
                      HaxePsiToken:(('(')
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('e')
                      HaxePsiToken:)(')')
                    SWITCH_BLOCK
                      HaxePsiToken:{('{')
                      SWITCH_CASE
                        HaxePsiToken:case('case')
                        SWITCH_CASE_EXPR
                          SWITCH_CASE_OBJECT_EXTRACTOR
                            TYPE
                              REFERENCE_EXPRESSION
                                IDENTIFIER
                                  HaxePsiToken:ID('TString')
                            HaxePsiToken:(('(')
                            SWITCH_CASE_OBJECT_EXTRACTOR_ARGUMENT_LIST
                              SWITCH_CASE_EXTRACTOR
                                CALL_EXPRESSION
                                  REFERENCE_EXPRESSION
                                    REFERENCE_EXPRESSION
                                      IDENTIFIER
                                        HaxePsiToken:ID('_')
                                    HaxePsiToken:.('.')
                                    IDENTIFIER
                                      HaxePsiToken:ID('toLowerCase')
                                  HaxePsiToken:(('(')
                                  HaxePsiToken:)(')')
                                HaxePsiToken:=>('=>')
                                SWITCH_CASE_EXPR
                                  STRING_LITERAL_EXPRESSION
                                    HaxePsiToken:OPEN_QUOTE('"')
                                    HaxePsiToken:REGULAR_STRING_PART('foo')
                                    HaxePsiToken:CLOSING_QUOTE('"')
                            HaxePsiToken:)(')')
                        HaxePsiToken::(':')
                        SWITCH_CASE_BLOCK
                          LITERAL_EXPRESSION
                            HaxePsiToken:true('true')
                          HaxePsiToken:;(';')
                      SWITCH_CASE
                        HaxePsiToken:case('case')
                        SWITCH_CASE_EXPR
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              HaxePsiToken:ID('_')
                        HaxePsiToken::(':')
                        SWITCH_CASE_BLOCK
                          LITERAL_EXPRESSION
                            HaxePsiToken:false('false')
                          HaxePsiToken:;(';')
                      HaxePsiToken:}('}')
          HaxePsiToken:}('}')
      HaxePsiToken:}('}')