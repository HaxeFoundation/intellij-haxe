Haxe File
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    HaxePsiToken:;(';')
  MODULE
    CLASS_DECLARATION
      HaxePsiToken:class('class')
      COMPONENT_NAME
        IDENTIFIER
          HaxePsiToken:ID('ChainedExtractorExpression')
      CLASS_BODY
        HaxePsiToken:{('{')
        METHOD_DECLARATION
          METHOD_MODIFIER
            HaxePsiToken:public('public')
          HaxePsiToken:function('function')
          COMPONENT_NAME
            IDENTIFIER
              HaxePsiToken:ID('test')
          HaxePsiToken:(('(')
          PARAMETER_LIST
            <empty list>
          HaxePsiToken:)(')')
          BLOCK_STATEMENT
            HaxePsiToken:{('{')
            SWITCH_STATEMENT
              HaxePsiToken:switch('switch')
              PARENTHESIZED_EXPRESSION
                HaxePsiToken:(('(')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('3')
                HaxePsiToken:)(')')
              SWITCH_BLOCK
                HaxePsiToken:{('{')
                SWITCH_CASE
                  HaxePsiToken:case('case')
                  SWITCH_CASE_EXPR
                    EXTRACTOR_MATCH_EXPRESSION
                      CALL_EXPRESSION
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('add')
                        HaxePsiToken:(('(')
                        CALL_EXPRESSION_LIST
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              HaxePsiToken:ID('_')
                          HaxePsiToken:,(',')
                          LITERAL_EXPRESSION
                            HaxePsiToken:LITINT('1')
                        HaxePsiToken:)(')')
                      HaxePsiToken:=>('=>')
                      SWITCH_CASE_EXPR
                        EXTRACTOR_MATCH_EXPRESSION
                          CALL_EXPRESSION
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                HaxePsiToken:ID('mul')
                            HaxePsiToken:(('(')
                            CALL_EXPRESSION_LIST
                              REFERENCE_EXPRESSION
                                IDENTIFIER
                                  HaxePsiToken:ID('_')
                              HaxePsiToken:,(',')
                              LITERAL_EXPRESSION
                                HaxePsiToken:LITINT('3')
                            HaxePsiToken:)(')')
                          HaxePsiToken:=>('=>')
                          SWITCH_CASE_EXPR
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                HaxePsiToken:ID('a')
                  HaxePsiToken::(':')
                  SWITCH_CASE_BLOCK
                    CALL_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('trace')
                      HaxePsiToken:(('(')
                      CALL_EXPRESSION_LIST
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('a')
                      HaxePsiToken:)(')')
                    HaxePsiToken:;(';')
                HaxePsiToken:}('}')
            HaxePsiToken:}('}')
        METHOD_DECLARATION
          HaxePsiToken:function('function')
          COMPONENT_NAME
            IDENTIFIER
              HaxePsiToken:ID('add')
          HaxePsiToken:(('(')
          PARAMETER_LIST
            PARAMETER
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('i1')
              TYPE_TAG
                HaxePsiToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('Int')
            HaxePsiToken:,(',')
            PARAMETER
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('i2')
              TYPE_TAG
                HaxePsiToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('Int')
          HaxePsiToken:)(')')
          BLOCK_STATEMENT
            HaxePsiToken:{('{')
            RETURN_STATEMENT
              HaxePsiToken:return('return')
              ADDITIVE_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('i1')
                ADDITIVE_OPERATOR
                  HaxePsiToken:+('+')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('i2')
              HaxePsiToken:;(';')
            HaxePsiToken:}('}')
        METHOD_DECLARATION
          HaxePsiToken:function('function')
          COMPONENT_NAME
            IDENTIFIER
              HaxePsiToken:ID('mul')
          HaxePsiToken:(('(')
          PARAMETER_LIST
            PARAMETER
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('i1')
              TYPE_TAG
                HaxePsiToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('Int')
            HaxePsiToken:,(',')
            PARAMETER
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('i2')
              TYPE_TAG
                HaxePsiToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('Int')
          HaxePsiToken:)(')')
          BLOCK_STATEMENT
            HaxePsiToken:{('{')
            RETURN_STATEMENT
              HaxePsiToken:return('return')
              MULTIPLICATIVE_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('i1')
                MULTIPLICATIVE_OPERATOR
                  HaxePsiToken:*('*')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('i2')
              HaxePsiToken:;(';')
            HaxePsiToken:}('}')
        HaxePsiToken:}('}')