Haxe File
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    HaxePsiToken:;(';')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('TestTernaryExpression')
    CLASS_BODY
      HaxePsiToken:{('{')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('Test')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('b')
              TYPE_TAG
                HaxePsiToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('Bool')
              VAR_INIT
                HaxePsiToken:=('=')
                LITERAL_EXPRESSION
                  HaxePsiToken:true('true')
            HaxePsiToken:;(';')
          RETURN_STATEMENT
            HaxePsiToken:return('return')
            TERNARY_EXPRESSION
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('b')
              HaxePsiToken:?('?')
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('true')
                HaxePsiToken:CLOSING_QUOTE('"')
              HaxePsiToken::(':')
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('false')
                HaxePsiToken:CLOSING_QUOTE('"')
            HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      HaxePsiToken:}('}')