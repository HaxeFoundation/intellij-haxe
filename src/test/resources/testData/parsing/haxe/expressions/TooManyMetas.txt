Haxe File
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    HaxePsiToken:;(';')
  PsiElement(EMBEDDED_META)
    COMPILE_TIME_META
      HaxePsiToken:@:('@:')
      TYPE
        HaxePsiToken:META_TYPE('meta')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('TestIssue81')
    CLASS_BODY
      HaxePsiToken:{('{')
      PsiElement(EMBEDDED_META)
        RUN_TIME_META
          HaxePsiToken:@('@')
          TYPE
            HaxePsiToken:META_TYPE('meta')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:static('static')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('main')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          PsiElement(EMBEDDED_META)
            RUN_TIME_META
              HaxePsiToken:@('@')
              TYPE
                HaxePsiToken:META_TYPE('meta')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('trace')
            HaxePsiToken:(('(')
            PsiElement(EMBEDDED_META)
              RUN_TIME_META
                HaxePsiToken:@('@')
                TYPE
                  HaxePsiToken:META_TYPE('meta')
            EXPRESSION_LIST
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('Haxe is great!')
                HaxePsiToken:CLOSING_QUOTE('"')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('target')
              VAR_INIT
                HaxePsiToken:=('=')
                PsiComment(DOC_COMMENT)('/** @anon( "anonData" ) */')
                OBJECT_LITERAL
                  HaxePsiToken:{('{')
                  OBJECT_LITERAL_ELEMENT
                    IDENTIFIER
                      HaxePsiToken:ID('pos')
                    HaxePsiToken::(':')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('0')
                  HaxePsiToken:}('}')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            PsiElement(EMBEDDED_META)
              RUN_TIME_META
                HaxePsiToken:@('@')
                TYPE
                  HaxePsiToken:META_TYPE('meta')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('targetpos')
              VAR_INIT
                HaxePsiToken:=('=')
                PsiElement(EMBEDDED_META)
                  RUN_TIME_META
                    HaxePsiToken:@('@')
                    TYPE
                      HaxePsiToken:META_TYPE('meta')
                PsiElement(EMBEDDED_META)
                  RUN_TIME_META
                    HaxePsiToken:@('@')
                    TYPE
                      HaxePsiToken:META_TYPE('meta')
                PsiElement(EMBEDDED_META)
                  COMPILE_TIME_META
                    HaxePsiToken:@:('@:')
                    TYPE
                      HaxePsiToken:META_TYPE('pos')
                    HaxePsiToken:(('(')
                    CONTENT
                      PsiElement(CT_META_ARGS)
                        COMPILE_TIME_META_ARG
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              HaxePsiToken:ID('target')
                    HaxePsiToken:)(')')
                LITERAL_EXPRESSION
                  BLOCK_STATEMENT
                    HaxePsiToken:{('{')
                    PsiElement(EMBEDDED_META)
                      COMPILE_TIME_META
                        HaxePsiToken:@:('@:')
                        TYPE
                          HaxePsiToken:META_TYPE('meta')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('10')
                    HaxePsiToken:;(';')
                    HaxePsiToken:}('}')
          HaxePsiToken:}('}')
      HaxePsiToken:}('}')