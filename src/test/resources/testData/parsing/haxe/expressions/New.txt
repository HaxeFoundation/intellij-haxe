Haxe File
  PsiComment(MML_COMMENT)('/* Tests parsing 'new' in a ternary expression */')
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    REFERENCE_EXPRESSION
      IDENTIFIER
        HaxePsiToken:ID('test_tivo_229')
    HaxePsiToken:;(';')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('A')
    CLASS_BODY
      HaxePsiToken:{('{')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:new('new')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          HaxePsiToken:}('}')
      HaxePsiToken:}('}')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('B')
    INHERIT_LIST
      EXTENDS_DECLARATION
        HaxePsiToken:extends('extends')
        TYPE
          REFERENCE_EXPRESSION
            IDENTIFIER
              HaxePsiToken:ID('A')
    CLASS_BODY
      HaxePsiToken:{('{')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:new('new')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          CALL_EXPRESSION
            SUPER_EXPRESSION
              HaxePsiToken:super('super')
            HaxePsiToken:(('(')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      HaxePsiToken:}('}')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('C')
    INHERIT_LIST
      EXTENDS_DECLARATION
        HaxePsiToken:extends('extends')
        TYPE
          REFERENCE_EXPRESSION
            IDENTIFIER
              HaxePsiToken:ID('B')
    CLASS_BODY
      HaxePsiToken:{('{')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:new('new')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                HaxePsiToken:ID('a')
            TYPE_TAG
              HaxePsiToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('A')
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          CALL_EXPRESSION
            SUPER_EXPRESSION
              HaxePsiToken:super('super')
            HaxePsiToken:(('(')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      HaxePsiToken:}('}')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('Test')
    CLASS_BODY
      HaxePsiToken:{('{')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:new('new')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          HaxePsiToken:}('}')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('getA')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                HaxePsiToken:ID('want_a')
            TYPE_TAG
              HaxePsiToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('Bool')
        HaxePsiToken:)(')')
        TYPE_TAG
          HaxePsiToken::(':')
          TYPE_OR_ANONYMOUS
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('A')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('qqq')
              VAR_INIT
                HaxePsiToken:=('=')
                TERNARY_EXPRESSION
                  PARENTHESIZED_EXPRESSION
                    HaxePsiToken:(('(')
                    COMPARE_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('want_a')
                      COMPARE_OPERATION
                        HaxePsiToken:==('==')
                      LITERAL_EXPRESSION
                        HaxePsiToken:true('true')
                    HaxePsiToken:)(')')
                  HaxePsiToken:?('?')
                  NEW_EXPRESSION
                    HaxePsiToken:new('new')
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('A')
                    HaxePsiToken:(('(')
                    HaxePsiToken:)(')')
                  HaxePsiToken::(':')
                  NEW_EXPRESSION
                    HaxePsiToken:new('new')
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('B')
                    HaxePsiToken:(('(')
                    HaxePsiToken:)(')')
            HaxePsiToken:;(';')
          RETURN_STATEMENT
            HaxePsiToken:return('return')
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('qqq')
            HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('getB')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                HaxePsiToken:ID('want_a')
            TYPE_TAG
              HaxePsiToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('Bool')
        HaxePsiToken:)(')')
        TYPE_TAG
          HaxePsiToken::(':')
          TYPE_OR_ANONYMOUS
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('A')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('qqq')
              VAR_INIT
                HaxePsiToken:=('=')
                TERNARY_EXPRESSION
                  COMPARE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:null('null')
                    COMPARE_OPERATION
                      HaxePsiToken:!=('!=')
                    NEW_EXPRESSION
                      HaxePsiToken:new('new')
                      TYPE
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('B')
                      HaxePsiToken:(('(')
                      HaxePsiToken:)(')')
                  HaxePsiToken:?('?')
                  NEW_EXPRESSION
                    HaxePsiToken:new('new')
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('A')
                    HaxePsiToken:(('(')
                    HaxePsiToken:)(')')
                  HaxePsiToken::(':')
                  NEW_EXPRESSION
                    HaxePsiToken:new('new')
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('B')
                    HaxePsiToken:(('(')
                    HaxePsiToken:)(')')
            HaxePsiToken:;(';')
          RETURN_STATEMENT
            HaxePsiToken:return('return')
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('qqq')
            HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('getC')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                HaxePsiToken:ID('want_a')
            TYPE_TAG
              HaxePsiToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('Bool')
        HaxePsiToken:)(')')
        TYPE_TAG
          HaxePsiToken::(':')
          TYPE_OR_ANONYMOUS
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('A')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('qqq')
              VAR_INIT
                HaxePsiToken:=('=')
                TERNARY_EXPRESSION
                  COMPARE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:null('null')
                    COMPARE_OPERATION
                      HaxePsiToken:!=('!=')
                    NEW_EXPRESSION
                      HaxePsiToken:new('new')
                      TYPE
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('B')
                      HaxePsiToken:(('(')
                      HaxePsiToken:)(')')
                  HaxePsiToken:?('?')
                  TERNARY_EXPRESSION
                    COMPARE_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('want_a')
                      COMPARE_OPERATION
                        HaxePsiToken:==('==')
                      LITERAL_EXPRESSION
                        HaxePsiToken:true('true')
                    HaxePsiToken:?('?')
                    NEW_EXPRESSION
                      HaxePsiToken:new('new')
                      TYPE
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('A')
                      HaxePsiToken:(('(')
                      HaxePsiToken:)(')')
                    HaxePsiToken::(':')
                    NEW_EXPRESSION
                      HaxePsiToken:new('new')
                      TYPE
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('B')
                      HaxePsiToken:(('(')
                      HaxePsiToken:)(')')
                  HaxePsiToken::(':')
                  TERNARY_EXPRESSION
                    COMPARE_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('want_a')
                      COMPARE_OPERATION
                        HaxePsiToken:==('==')
                      LITERAL_EXPRESSION
                        HaxePsiToken:false('false')
                    HaxePsiToken:?('?')
                    NEW_EXPRESSION
                      HaxePsiToken:new('new')
                      TYPE
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('A')
                      HaxePsiToken:(('(')
                      HaxePsiToken:)(')')
                    HaxePsiToken::(':')
                    NEW_EXPRESSION
                      HaxePsiToken:new('new')
                      TYPE
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('B')
                      HaxePsiToken:(('(')
                      HaxePsiToken:)(')')
            HaxePsiToken:;(';')
          RETURN_STATEMENT
            HaxePsiToken:return('return')
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('qqq')
            HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('compareNew')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        TYPE_TAG
          HaxePsiToken::(':')
          TYPE_OR_ANONYMOUS
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('Bool')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          RETURN_STATEMENT
            HaxePsiToken:return('return')
            COMPARE_EXPRESSION
              NEW_EXPRESSION
                HaxePsiToken:new('new')
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('A')
                HaxePsiToken:(('(')
                HaxePsiToken:)(')')
              COMPARE_OPERATION
                HaxePsiToken:==('==')
              NEW_EXPRESSION
                HaxePsiToken:new('new')
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('B')
                HaxePsiToken:(('(')
                HaxePsiToken:)(')')
            HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('getChain')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        TYPE_TAG
          HaxePsiToken::(':')
          TYPE_OR_ANONYMOUS
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('C')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          RETURN_STATEMENT
            HaxePsiToken:return('return')
            NEW_EXPRESSION
              HaxePsiToken:new('new')
              TYPE
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('C')
              HaxePsiToken:(('(')
              NEW_EXPRESSION
                HaxePsiToken:new('new')
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('C')
                HaxePsiToken:(('(')
                NEW_EXPRESSION
                  HaxePsiToken:new('new')
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('C')
                  HaxePsiToken:(('(')
                  NEW_EXPRESSION
                    HaxePsiToken:new('new')
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('A')
                    HaxePsiToken:(('(')
                    HaxePsiToken:)(')')
                  HaxePsiToken:)(')')
                HaxePsiToken:)(')')
              HaxePsiToken:)(')')
            HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      HaxePsiToken:}('}')