Haxe File
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    HaxePsiToken:;(';')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('Test')
    CLASS_BODY
      HaxePsiToken:{('{')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        METHOD_MODIFIER
          HaxePsiToken:static('static')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('main')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('foo')
              VAR_INIT
                HaxePsiToken:=('=')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
            HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:CLOSING_QUOTE('"')
              HaxePsiToken:.('.')
              IDENTIFIER
                HaxePsiToken:ID('charAt')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('0')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART('$foo')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART('$$')
            HaxePsiToken:REGULAR_STRING_PART('foo')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART('absdf')
            HaxePsiToken:REGULAR_STRING_PART('$foo')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART('$$')
            HaxePsiToken:REGULAR_STRING_PART('${')
            HaxePsiToken:REGULAR_STRING_PART('foo')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE(''')
            HaxePsiToken:REGULAR_STRING_PART('$$')
            SHORT_TEMPLATE_ENTRY
              HaxePsiToken:SHORT_TEMPLATE_ENTRY_START('$')
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('foo')
            HaxePsiToken:CLOSING_QUOTE(''')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART('ab')
            HaxePsiToken:REGULAR_STRING_PART('${')
            HaxePsiToken:REGULAR_STRING_PART('trace('')}')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART('$$')
            HaxePsiToken:REGULAR_STRING_PART('${')
            HaxePsiToken:REGULAR_STRING_PART('trace()}')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART('$$')
            HaxePsiToken:REGULAR_STRING_PART('${')
            HaxePsiToken:REGULAR_STRING_PART('trace(')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE('"')
            HaxePsiToken:REGULAR_STRING_PART(')}')
            HaxePsiToken:CLOSING_QUOTE('"')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE(''')
            HaxePsiToken:REGULAR_STRING_PART('$$')
            LONG_TEMPLATE_ENTRY
              HaxePsiToken:LONG_TEMPLATE_ENTRY_START('${')
              CALL_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('getVal')
                HaxePsiToken:(('(')
                EXPRESSION_LIST
                  STRING_LITERAL_EXPRESSION
                    HaxePsiToken:OPEN_QUOTE('"')
                    HaxePsiToken:REGULAR_STRING_PART(''')
                    HaxePsiToken:CLOSING_QUOTE('"')
                HaxePsiToken:)(')')
              HaxePsiToken:LONG_TEMPLATE_ENTRY_END('}')
            HaxePsiToken:REGULAR_STRING_PART('\'')
            HaxePsiToken:CLOSING_QUOTE(''')
          HaxePsiToken:;(';')
          STRING_LITERAL_EXPRESSION
            HaxePsiToken:OPEN_QUOTE(''')
            HaxePsiToken:REGULAR_STRING_PART('ca')
            HaxePsiToken:REGULAR_STRING_PART('$$')
            HaxePsiToken:REGULAR_STRING_PART('h money')
            HaxePsiToken:CLOSING_QUOTE(''')
          HaxePsiToken:;(';')
          PsiComment(MSL_COMMENT)('// Issue 303.')
          HaxePsiToken:}('}')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        METHOD_MODIFIER
          HaxePsiToken:static('static')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('getVal')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                HaxePsiToken:ID('s')
            TYPE_TAG
              HaxePsiToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('String')
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          RETURN_STATEMENT
            HaxePsiToken:return('return')
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('s')
            HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      HaxePsiToken:}('}')