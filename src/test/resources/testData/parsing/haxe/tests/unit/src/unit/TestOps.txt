Haxe File
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    REFERENCE_EXPRESSION
      IDENTIFIER
        HaxePsiToken:ID('unit')
    HaxePsiToken:;(';')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('TestOps')
    INHERIT_LIST
      EXTENDS_DECLARATION
        HaxePsiToken:extends('extends')
        TYPE
          REFERENCE_EXPRESSION
            IDENTIFIER
              HaxePsiToken:ID('Test')
    CLASS_BODY
      HaxePsiToken:{('{')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('testOps')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ADDITIVE_EXPRESSION
                ADDITIVE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('1')
                  HaxePsiToken:+('+')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('2')
                HaxePsiToken:+('+')
                STRING_LITERAL_EXPRESSION
                  HaxePsiToken:OPEN_QUOTE('"')
                  HaxePsiToken:CLOSING_QUOTE('"')
              HaxePsiToken:,(',')
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('3')
                HaxePsiToken:CLOSING_QUOTE('"')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ADDITIVE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  ADDITIVE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                    HaxePsiToken:+('+')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('2')
                  HaxePsiToken:)(')')
                HaxePsiToken:+('+')
                STRING_LITERAL_EXPRESSION
                  HaxePsiToken:OPEN_QUOTE('"')
                  HaxePsiToken:CLOSING_QUOTE('"')
              HaxePsiToken:,(',')
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('3')
                HaxePsiToken:CLOSING_QUOTE('"')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ADDITIVE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
                HaxePsiToken:+('+')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  ADDITIVE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('2')
                    HaxePsiToken:+('+')
                    STRING_LITERAL_EXPRESSION
                      HaxePsiToken:OPEN_QUOTE('"')
                      HaxePsiToken:CLOSING_QUOTE('"')
                  HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('12')
                HaxePsiToken:CLOSING_QUOTE('"')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ADDITIVE_EXPRESSION
                ADDITIVE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('4')
                  HaxePsiToken:-('-')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
                HaxePsiToken:+('+')
                STRING_LITERAL_EXPRESSION
                  HaxePsiToken:OPEN_QUOTE('"')
                  HaxePsiToken:CLOSING_QUOTE('"')
              HaxePsiToken:,(',')
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('1')
                HaxePsiToken:CLOSING_QUOTE('"')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ADDITIVE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  ADDITIVE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('4')
                    HaxePsiToken:-('-')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                  HaxePsiToken:)(')')
                HaxePsiToken:+('+')
                STRING_LITERAL_EXPRESSION
                  HaxePsiToken:OPEN_QUOTE('"')
                  HaxePsiToken:CLOSING_QUOTE('"')
              HaxePsiToken:,(',')
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('1')
                HaxePsiToken:CLOSING_QUOTE('"')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          PsiComment(MSL_COMMENT)('//eq(4 - (3 + ""), "1");')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              BITWISE_EXPRESSION
                BITWISE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('4')
                  BIT_OPERATION
                    HaxePsiToken:|('|')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
                BIT_OPERATION
                  HaxePsiToken:&('&')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('1')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              BITWISE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  BITWISE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('4')
                    BIT_OPERATION
                      HaxePsiToken:|('|')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                  HaxePsiToken:)(')')
                BIT_OPERATION
                  HaxePsiToken:&('&')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('1')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              BITWISE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('4')
                BIT_OPERATION
                  HaxePsiToken:|('|')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  BITWISE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                    BIT_OPERATION
                      HaxePsiToken:&('&')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                  HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              BITWISE_EXPRESSION
                BITWISE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('4')
                  BIT_OPERATION
                    HaxePsiToken:&('&')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
                BIT_OPERATION
                  HaxePsiToken:|('|')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('1')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              BITWISE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  BITWISE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('4')
                    BIT_OPERATION
                      HaxePsiToken:&('&')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                  HaxePsiToken:)(')')
                BIT_OPERATION
                  HaxePsiToken:|('|')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('1')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              BITWISE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('4')
                BIT_OPERATION
                  HaxePsiToken:&('&')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  BITWISE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                    BIT_OPERATION
                      HaxePsiToken:|('|')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                  HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('0')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ADDITIVE_EXPRESSION
                PREFIX_EXPRESSION
                  HaxePsiToken:-('-')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('5')
                HaxePsiToken:+('+')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
              HaxePsiToken:,(',')
              PREFIX_EXPRESSION
                HaxePsiToken:-('-')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('4')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              PREFIX_EXPRESSION
                HaxePsiToken:-('-')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  ADDITIVE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('5')
                    HaxePsiToken:+('+')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                  HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              PREFIX_EXPRESSION
                HaxePsiToken:-('-')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('6')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('t')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              COMPARE_EXPRESSION
                SHIFT_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('5')
                  SHIFT_OPERATOR
                    SHIFT_LEFT_OPERATOR
                      HaxePsiToken:<<('<<')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('2')
                COMPARE_OPERATION
                  HaxePsiToken:==('==')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('20')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('t')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              COMPARE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  SHIFT_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('5')
                    SHIFT_OPERATOR
                      SHIFT_LEFT_OPERATOR
                        HaxePsiToken:<<('<<')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('2')
                  HaxePsiToken:)(')')
                COMPARE_OPERATION
                  HaxePsiToken:==('==')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('20')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('t')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              COMPARE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('20')
                COMPARE_OPERATION
                  HaxePsiToken:==('==')
                SHIFT_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('5')
                  SHIFT_OPERATOR
                    SHIFT_LEFT_OPERATOR
                      HaxePsiToken:<<('<<')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('2')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('t')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              COMPARE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('20')
                COMPARE_OPERATION
                  HaxePsiToken:==('==')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  SHIFT_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('5')
                    SHIFT_OPERATOR
                      SHIFT_LEFT_OPERATOR
                        HaxePsiToken:<<('<<')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('2')
                  HaxePsiToken:)(')')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                MODULO_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('5')
                  HaxePsiToken:%('%')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
                HaxePsiToken:*('*')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('4')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('8')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  MODULO_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('5')
                    HaxePsiToken:%('%')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                  HaxePsiToken:)(')')
                HaxePsiToken:*('*')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('4')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('8')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MODULO_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('5')
                HaxePsiToken:%('%')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  MULTIPLICATIVE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                    HaxePsiToken:*('*')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('4')
                  HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                MULTIPLICATIVE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('20')
                  HaxePsiToken:/('/')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('2')
                HaxePsiToken:/('/')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('2')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  MULTIPLICATIVE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('20')
                    HaxePsiToken:/('/')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('2')
                  HaxePsiToken:)(')')
                HaxePsiToken:/('/')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('2')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('20')
                HaxePsiToken:/('/')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  MULTIPLICATIVE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('2')
                    HaxePsiToken:/('/')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('2')
                  HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('20')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              SHIFT_EXPRESSION
                SHIFT_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('2')
                  SHIFT_OPERATOR
                    SHIFT_LEFT_OPERATOR
                      HaxePsiToken:<<('<<')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
                SHIFT_OPERATOR
                  SHIFT_RIGHT_OPERATOR
                    HaxePsiToken:>>('>>')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('8')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              SHIFT_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  SHIFT_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('2')
                    SHIFT_OPERATOR
                      SHIFT_LEFT_OPERATOR
                        HaxePsiToken:<<('<<')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                  HaxePsiToken:)(')')
                SHIFT_OPERATOR
                  SHIFT_RIGHT_OPERATOR
                    HaxePsiToken:>>('>>')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('8')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              SHIFT_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('2')
                SHIFT_OPERATOR
                  SHIFT_LEFT_OPERATOR
                    HaxePsiToken:<<('<<')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  SHIFT_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                    SHIFT_OPERATOR
                      SHIFT_RIGHT_OPERATOR
                        HaxePsiToken:>>('>>')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                  HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('4')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              SHIFT_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  ADDITIVE_EXPRESSION
                    REFERENCE_EXPRESSION
                      CALL_EXPRESSION
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('getA')
                        HaxePsiToken:(('(')
                        HaxePsiToken:)(')')
                      HaxePsiToken:.('.')
                      IDENTIFIER
                        HaxePsiToken:ID('a')
                    HaxePsiToken:+('+')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                  HaxePsiToken:)(')')
                SHIFT_OPERATOR
                  SHIFT_RIGHT_OPERATOR
                    HaxePsiToken:>>('>>')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('1')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              COMPARE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  BITWISE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                    BIT_OPERATION
                      HaxePsiToken:&('&')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITHEX('0x8000')
                  HaxePsiToken:)(')')
                COMPARE_OPERATION
                  HaxePsiToken:!=('!=')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              COMPARE_EXPRESSION
                BITWISE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('1')
                  BIT_OPERATION
                    HaxePsiToken:&('&')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITHEX('0x8000')
                COMPARE_OPERATION
                  HaxePsiToken:!=('!=')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              COMPARE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
                COMPARE_OPERATION
                  HaxePsiToken:!=('!=')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  BITWISE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                    BIT_OPERATION
                      HaxePsiToken:&('&')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITHEX('0x8000')
                  HaxePsiToken:)(')')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              COMPARE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
                COMPARE_OPERATION
                  HaxePsiToken:!=('!=')
                BITWISE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('1')
                  BIT_OPERATION
                    HaxePsiToken:&('&')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITHEX('0x8000')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('5')
                HaxePsiToken:*('*')
                MODULO_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('10')
                  HaxePsiToken:%('%')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('5')
                HaxePsiToken:*('*')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  MODULO_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('10')
                    HaxePsiToken:%('%')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                  HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MODULO_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  MULTIPLICATIVE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('5')
                    HaxePsiToken:*('*')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('10')
                  HaxePsiToken:)(')')
                HaxePsiToken:%('%')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('3')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('2')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                MODULO_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('10')
                  HaxePsiToken:%('%')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
                HaxePsiToken:*('*')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('5')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  MODULO_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('10')
                    HaxePsiToken:%('%')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                  HaxePsiToken:)(')')
                HaxePsiToken:*('*')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('5')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MODULO_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('10')
                HaxePsiToken:%('%')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  MULTIPLICATIVE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                    HaxePsiToken:*('*')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('5')
                  HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('10')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MODULO_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('100')
                HaxePsiToken:%('%')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('100')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('0')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MODULO_EXPRESSION
                PREFIX_EXPRESSION
                  HaxePsiToken:-('-')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('100')
                HaxePsiToken:%('%')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('100')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('0')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MODULO_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITFLOAT('101.5')
                HaxePsiToken:%('%')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('100')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITFLOAT('1.5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MODULO_EXPRESSION
                PREFIX_EXPRESSION
                  HaxePsiToken:-('-')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITFLOAT('101.5')
                HaxePsiToken:%('%')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('100')
              HaxePsiToken:,(',')
              PREFIX_EXPRESSION
                HaxePsiToken:-('-')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITFLOAT('1.5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('x')
              VAR_INIT
                HaxePsiToken:=('=')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITFLOAT('101.5')
            HaxePsiToken:;(';')
          ASSIGN_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('x')
            ASSIGN_OPERATION
              HaxePsiToken:%=('%=')
            LITERAL_EXPRESSION
              HaxePsiToken:LITINT('100')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('x')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITFLOAT('1.5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('t')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              CALL_EXPRESSION
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('Math')
                  HaxePsiToken:.('.')
                  IDENTIFIER
                    HaxePsiToken:ID('isNaN')
                HaxePsiToken:(('(')
                EXPRESSION_LIST
                  MODULO_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITFLOAT('5.0')
                    HaxePsiToken:%('%')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITFLOAT('0.0')
                HaxePsiToken:)(')')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('t')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              CALL_EXPRESSION
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('Math')
                  HaxePsiToken:.('.')
                  IDENTIFIER
                    HaxePsiToken:ID('isNaN')
                HaxePsiToken:(('(')
                EXPRESSION_LIST
                  ASSIGN_EXPRESSION
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('x')
                    ASSIGN_OPERATION
                      HaxePsiToken:%=('%=')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITFLOAT('0.0')
                HaxePsiToken:)(')')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          PsiComment(#if)('#if')
          PsiComment(PPEXPRESSION)(' ')
          PsiComment(PPEXPRESSION)('!')
          PsiComment(PPEXPRESSION)('macro')
          PsiComment(MSL_COMMENT)('//t(Math.isNaN(1 % 0));')
          PsiComment(MSL_COMMENT)('//t(Math.isNaN(0 % 0));')
          PsiComment(MSL_COMMENT)('//t(Math.isNaN(x %= 0));')
          PsiComment(#end)('#end')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('x')
              TYPE_TAG
                HaxePsiToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('Dynamic')
              VAR_INIT
                HaxePsiToken:=('=')
                ARRAY_LITERAL
                  HaxePsiToken:[('[')
                  EXPRESSION_LIST
                    PREFIX_EXPRESSION
                      HaxePsiToken:-('-')
                      LITERAL_EXPRESSION
                        HaxePsiToken:LITFLOAT('101.5')
                  HaxePsiToken:](']')
            HaxePsiToken:;(';')
          ASSIGN_EXPRESSION
            ARRAY_ACCESS_EXPRESSION
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('x')
              HaxePsiToken:[('[')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('0')
              HaxePsiToken:](']')
            ASSIGN_OPERATION
              HaxePsiToken:%=('%=')
            LITERAL_EXPRESSION
              HaxePsiToken:LITINT('100')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ARRAY_ACCESS_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('x')
                HaxePsiToken:[('[')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
                HaxePsiToken:](']')
              HaxePsiToken:,(',')
              PREFIX_EXPRESSION
                HaxePsiToken:-('-')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITFLOAT('1.5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              TERNARY_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:true('true')
                HaxePsiToken:?('?')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
                HaxePsiToken::(':')
                MULTIPLICATIVE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('6')
                  HaxePsiToken:*('*')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('5')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('1')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              TERNARY_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:false('false')
                HaxePsiToken:?('?')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
                HaxePsiToken::(':')
                MULTIPLICATIVE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('6')
                  HaxePsiToken:*('*')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('5')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('30')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  TERNARY_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:true('true')
                    HaxePsiToken:?('?')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                    HaxePsiToken::(':')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('6')
                  HaxePsiToken:)(')')
                HaxePsiToken:*('*')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('5')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              MULTIPLICATIVE_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  TERNARY_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:false('false')
                    HaxePsiToken:?('?')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                    HaxePsiToken::(':')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('6')
                  HaxePsiToken:)(')')
                HaxePsiToken:*('*')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('5')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('30')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ADDITIVE_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
                HaxePsiToken:+('+')
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  TERNARY_EXPRESSION
                    COMPARE_EXPRESSION
                      LITERAL_EXPRESSION
                        HaxePsiToken:LITINT('5')
                      COMPARE_OPERATION
                        HaxePsiToken:==('==')
                      LITERAL_EXPRESSION
                        HaxePsiToken:LITINT('6')
                    HaxePsiToken:?('?')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('4')
                    HaxePsiToken::(':')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                  HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('2')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              TERNARY_EXPRESSION
                COMPARE_EXPRESSION
                  ADDITIVE_EXPRESSION
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                    HaxePsiToken:+('+')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('1')
                  COMPARE_OPERATION
                    HaxePsiToken:==('==')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
                HaxePsiToken:?('?')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
                HaxePsiToken::(':')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('5')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('5')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              TERNARY_EXPRESSION
                COMPARE_EXPRESSION
                  PREFIX_EXPRESSION
                    HaxePsiToken:-('-')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('3')
                  COMPARE_OPERATION
                    HaxePsiToken:==('==')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
                HaxePsiToken:?('?')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
                HaxePsiToken::(':')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('1')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('t')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              TERNARY_EXPRESSION
                PREFIX_EXPRESSION
                  HaxePsiToken:!('!')
                  LITERAL_EXPRESSION
                    HaxePsiToken:true('true')
                HaxePsiToken:?('?')
                LITERAL_EXPRESSION
                  HaxePsiToken:true('true')
                HaxePsiToken::(':')
                LITERAL_EXPRESSION
                  HaxePsiToken:true('true')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('k')
              VAR_INIT
                HaxePsiToken:=('=')
                LITERAL_EXPRESSION
                  HaxePsiToken:false('false')
            HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ASSIGN_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('k')
                ASSIGN_OPERATION
                  HaxePsiToken:=('=')
                TERNARY_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:true('true')
                  HaxePsiToken:?('?')
                  LITERAL_EXPRESSION
                    HaxePsiToken:false('false')
                  HaxePsiToken::(':')
                  LITERAL_EXPRESSION
                    HaxePsiToken:true('true')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('k')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              TERNARY_EXPRESSION
                PARENTHESIZED_EXPRESSION
                  HaxePsiToken:(('(')
                  ASSIGN_EXPRESSION
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('k')
                    ASSIGN_OPERATION
                      HaxePsiToken:=('=')
                    LITERAL_EXPRESSION
                      HaxePsiToken:true('true')
                  HaxePsiToken:)(')')
                HaxePsiToken:?('?')
                LITERAL_EXPRESSION
                  HaxePsiToken:false('false')
                HaxePsiToken::(':')
                LITERAL_EXPRESSION
                  HaxePsiToken:true('true')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('t')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('k')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('t')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              LOGIC_OR_EXPRESSION
                LITERAL_EXPRESSION
                  HaxePsiToken:true('true')
                HaxePsiToken:||('||')
                LOGIC_AND_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:false('false')
                  HaxePsiToken:&&('&&')
                  LITERAL_EXPRESSION
                    HaxePsiToken:false('false')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('x')
              VAR_INIT
                HaxePsiToken:=('=')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
            HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              PREFIX_EXPRESSION
                HaxePsiToken:-('-')
                POSTFIX_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('x')
                  HaxePsiToken:++('++')
              HaxePsiToken:,(',')
              PREFIX_EXPRESSION
                HaxePsiToken:-('-')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('1')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              PREFIX_EXPRESSION
                HaxePsiToken:-('-')
                POSTFIX_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('x')
                  HaxePsiToken:--('--')
              HaxePsiToken:,(',')
              PREFIX_EXPRESSION
                HaxePsiToken:-('-')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('2')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              CALL_EXPRESSION
                REFERENCE_EXPRESSION
                  PARENTHESIZED_EXPRESSION
                    HaxePsiToken:(('(')
                    ADDITIVE_EXPRESSION
                      STRING_LITERAL_EXPRESSION
                        HaxePsiToken:OPEN_QUOTE('"')
                        HaxePsiToken:REGULAR_STRING_PART('bla')
                        HaxePsiToken:CLOSING_QUOTE('"')
                      HaxePsiToken:+('+')
                      STRING_LITERAL_EXPRESSION
                        HaxePsiToken:OPEN_QUOTE('"')
                        HaxePsiToken:REGULAR_STRING_PART('x')
                        HaxePsiToken:CLOSING_QUOTE('"')
                    HaxePsiToken:)(')')
                  HaxePsiToken:.('.')
                  IDENTIFIER
                    HaxePsiToken:ID('indexOf')
                HaxePsiToken:(('(')
                EXPRESSION_LIST
                  STRING_LITERAL_EXPRESSION
                    HaxePsiToken:OPEN_QUOTE('"')
                    HaxePsiToken:REGULAR_STRING_PART('x')
                    HaxePsiToken:CLOSING_QUOTE('"')
                HaxePsiToken:)(')')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('3')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ADDITIVE_EXPRESSION
                MULTIPLICATIVE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('5')
                  HaxePsiToken:*('*')
                  PsiElement(EMBEDDED_META)
                    RUN_TIME_META
                      HaxePsiToken:@('@')
                      TYPE
                        HaxePsiToken:META_TYPE('foo')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
                HaxePsiToken:+('+')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('4')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('19')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('eq')
            HaxePsiToken:(('(')
            EXPRESSION_LIST
              ADDITIVE_EXPRESSION
                MULTIPLICATIVE_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('5')
                  HaxePsiToken:*('*')
                  PsiElement(EMBEDDED_META)
                    RUN_TIME_META
                      HaxePsiToken:@('@')
                      TYPE
                        HaxePsiToken:META_TYPE('foo')
                  PsiElement(EMBEDDED_META)
                    RUN_TIME_META
                      HaxePsiToken:@('@')
                      TYPE
                        HaxePsiToken:META_TYPE('bar')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('3')
                HaxePsiToken:+('+')
                PsiElement(EMBEDDED_META)
                  RUN_TIME_META
                    HaxePsiToken:@('@')
                    TYPE
                      HaxePsiToken:META_TYPE('baz')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('4')
              HaxePsiToken:,(',')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('19')
            HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:static('static')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('getA')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        RETURN_STATEMENT
          HaxePsiToken:return('return')
          OBJECT_LITERAL
            HaxePsiToken:{('{')
            OBJECT_LITERAL_ELEMENT
              IDENTIFIER
                HaxePsiToken:ID('a')
              HaxePsiToken::(':')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('1')
            HaxePsiToken:}('}')
          HaxePsiToken:;(';')
      HaxePsiToken:}('}')