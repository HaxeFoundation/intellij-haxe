Haxe File
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('ArrowFunctionSyntaxTest')
    CLASS_BODY
      HaxePsiToken:{('{')
      METHOD_DECLARATION
        METHOD_MODIFIER
          HaxePsiToken:public('public')
        METHOD_MODIFIER
          HaxePsiToken:static('static')
        HaxePsiToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('main')
        HaxePsiToken:(('(')
        PARAMETER_LIST
          <empty list>
        HaxePsiToken:)(')')
        BLOCK_STATEMENT
          HaxePsiToken:{('{')
          LOCAL_VAR_DECLARATION_LIST
            MUTABILITY_MODIFIER
              HaxePsiToken:var('var')
            LOCAL_VAR_DECLARATION
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('f0_0')
              TYPE_TAG
                HaxePsiToken::(':')
                FUNCTION_TYPE
                  FUNCTION_ARGUMENT
                    TYPE_OR_ANONYMOUS
                      TYPE
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('Void')
                  HaxePsiToken:->('->')
                  FUNCTION_RETURN_TYPE
                    TYPE_OR_ANONYMOUS
                      TYPE
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('Int')
            HaxePsiToken:;(';')
          ASSIGN_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f0_0')
            ASSIGN_OPERATION
              HaxePsiToken:=('=')
            PARENTHESIZED_EXPRESSION
              HaxePsiToken:(('(')
              FUNCTION_LITERAL
                HaxePsiToken:function('function')
                HaxePsiToken:(('(')
                PARAMETER_LIST
                  <empty list>
                HaxePsiToken:)(')')
                LAMDA_RETURN_STATEMENT
                  HaxePsiToken:return('return')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('0')
              HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          ASSIGN_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f0_0')
            ASSIGN_OPERATION
              HaxePsiToken:=('=')
            FUNCTION_LITERAL
              HaxePsiToken:function('function')
              HaxePsiToken:(('(')
              PARAMETER_LIST
                <empty list>
              HaxePsiToken:)(')')
              LAMDA_RETURN_STATEMENT
                HaxePsiToken:return('return')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
          HaxePsiToken:;(';')
          ASSIGN_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f0_0')
            ASSIGN_OPERATION
              HaxePsiToken:=('=')
            PARENTHESIZED_EXPRESSION
              HaxePsiToken:(('(')
              FUNCTION_LITERAL
                HaxePsiToken:(('(')
                PARAMETER_LIST
                  <empty list>
                HaxePsiToken:)(')')
                HaxePsiToken:->('->')
                LAMDA_RETURN_STATEMENT
                  HaxePsiToken:return('return')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('0')
              HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          ASSIGN_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f0_0')
            ASSIGN_OPERATION
              HaxePsiToken:=('=')
            FUNCTION_LITERAL
              HaxePsiToken:(('(')
              PARAMETER_LIST
                <empty list>
              HaxePsiToken:)(')')
              HaxePsiToken:->('->')
              LAMDA_RETURN_STATEMENT
                HaxePsiToken:return('return')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
          HaxePsiToken:;(';')
          ASSIGN_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f0_0')
            ASSIGN_OPERATION
              HaxePsiToken:=('=')
            PARENTHESIZED_EXPRESSION
              HaxePsiToken:(('(')
              FUNCTION_LITERAL
                HaxePsiToken:(('(')
                PARAMETER_LIST
                  <empty list>
                HaxePsiToken:)(')')
                HaxePsiToken:->('->')
                LITERAL_EXPRESSION
                  HaxePsiToken:LITINT('0')
              HaxePsiToken:)(')')
          HaxePsiToken:;(';')
          ASSIGN_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                HaxePsiToken:ID('f0_0')
            ASSIGN_OPERATION
              HaxePsiToken:=('=')
            FUNCTION_LITERAL
              HaxePsiToken:(('(')
              PARAMETER_LIST
                <empty list>
              HaxePsiToken:)(')')
              HaxePsiToken:->('->')
              LITERAL_EXPRESSION
                HaxePsiToken:LITINT('0')
          HaxePsiToken:;(';')
          HaxePsiToken:}('}')
      HaxePsiToken:}('}')