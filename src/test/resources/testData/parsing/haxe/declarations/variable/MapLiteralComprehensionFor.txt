Haxe File
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    HaxePsiToken:;(';')
  CLASS_DECLARATION
    HaxePsiToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        HaxePsiToken:ID('MapLiteral')
    CLASS_BODY
      HaxePsiToken:{('{')
      FIELD_DECLARATION
        MUTABILITY_MODIFIER
          HaxePsiToken:var('var')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('words')
        VAR_INIT
          HaxePsiToken:=('=')
          ARRAY_LITERAL
            HaxePsiToken:[('[')
            EXPRESSION_LIST
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('one')
                HaxePsiToken:CLOSING_QUOTE('"')
              HaxePsiToken:,(',')
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('two')
                HaxePsiToken:CLOSING_QUOTE('"')
              HaxePsiToken:,(',')
              STRING_LITERAL_EXPRESSION
                HaxePsiToken:OPEN_QUOTE('"')
                HaxePsiToken:REGULAR_STRING_PART('three')
                HaxePsiToken:CLOSING_QUOTE('"')
            HaxePsiToken:](']')
        HaxePsiToken:;(';')
      FIELD_DECLARATION
        MUTABILITY_MODIFIER
          HaxePsiToken:var('var')
        COMPONENT_NAME
          IDENTIFIER
            HaxePsiToken:ID('map')
        VAR_INIT
          HaxePsiToken:=('=')
          MAP_LITERAL
            HaxePsiToken:[('[')
            MAP_INITIALIZER_FOR_STATEMENT
              HaxePsiToken:for('for')
              HaxePsiToken:(('(')
              COMPONENT_NAME
                IDENTIFIER
                  HaxePsiToken:ID('n')
              HaxePsiToken:in('in')
              ITERABLE
                ITERATOR_EXPRESSION
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('0')
                  HaxePsiToken:...('...')
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('words')
                    HaxePsiToken:.('.')
                    IDENTIFIER
                      HaxePsiToken:ID('length')
              HaxePsiToken:)(')')
              MAP_INITIALIZER_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    HaxePsiToken:ID('n')
                HaxePsiToken:=>('=>')
                ARRAY_ACCESS_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('words')
                  HaxePsiToken:[('[')
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      HaxePsiToken:ID('n')
                  HaxePsiToken:](']')
            HaxePsiToken:](']')
        HaxePsiToken:;(';')
      HaxePsiToken:}('}')