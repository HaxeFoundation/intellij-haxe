name: Build, IntelliJ-Haxe-plugin

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'feature/*'
  pull_request:
    branches:
      - 'master'
      - 'develop'
      - 'feature/*'

jobs:
  Build:
    strategy:
      fail-fast: false # set this to true if you want to cancel all builds if one fails.
      matrix:
        IDEA_VERSION: [2022.3.3]
        OS: [macOS-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.OS }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17
          architecture: x64

      - name: Set up Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.5

      - name: Test haxe
        run: haxe -version

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache plugin downloads
        uses: actions/cache@v3
        with:
          path: $GITHUB_WORKSPACE/dependencies
          key: ${{ matrix.IDEA_VERSION }}-downloads-${{ hashFiles('downloads/**') }}
          restore-keys: ${{ matrix.IDEA_VERSION }}-downloads

      - name: Cache intelliJ downloads
        uses: actions/cache@v3
        with:
          path: $GITHUB_WORKSPACE/idea-IU
          key: ${{ matrix.IDEA_VERSION }}-idea-${{ hashFiles('ideaIU-${{ matrix.IDEA_VERSION }}/**') }}
          restore-keys: ${{ matrix.IDEA_VERSION }}-idea

      - name: Prepare (windows)
        if: ${{ matrix.os == 'windows-latest'}}
        run: .\gradlew.bat  setupDependencies -PtargetVersion="${{ matrix.IDEA_VERSION }}"  -stacktrace

      - name: Build with Gradle (windows)
        if: ${{ matrix.os == 'windows-latest'}}
        run: .\gradlew.bat clean setupDependencies build verifyPlugin -PtargetVersion="${{ matrix.IDEA_VERSION }}" -stacktrace

      - name: Prepare (linux/mac)
        if: ${{ matrix.os != 'windows-latest'}}
        run: ./gradlew setupDependencies -PtargetVersion="${{ matrix.IDEA_VERSION }}"  -stacktrace

      - name: Build with Gradle (linux/mac)
        if: ${{ matrix.os != 'windows-latest'}}
        run: ./gradlew clean build verifyPlugin -PtargetVersion="${{ matrix.IDEA_VERSION }}" -stacktrace

