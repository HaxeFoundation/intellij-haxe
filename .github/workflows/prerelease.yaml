name: Pre-release, IntelliJ-Haxe-plugin


on:
  push:
    tags:
      - "beta-[0-9]+.[0-9]+.[0-9]+**" # trigger on  tags that matches version numbers ex. 1.3.10

jobs:
  prepare:
    name: Create Pre-release draft
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Get Time
        id: timestep
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDDHHmm'

      - name: Get short SHA
        id: short_sha
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

      - name: Create Pre-release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: pre-release/${{steps.timestep.outputs.time }}
          release_name: Beta build (${{ steps.short_sha.outputs.sha8 }})
          draft: true
          prerelease: true

  build:
    name: Build and upload artifacts
    strategy:
      fail-fast: true # cancel all builds if one fails.
      matrix:
        IDEA_VERSION: [2023.1]
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17
          architecture: x64

      - name: Set up Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.3.0

      - name: Test haxe
        run: haxe -version

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache plugin downloads
        uses: actions/cache@v3
        with:
          path: $GITHUB_WORKSPACE/dependencies
          key: ${{ matrix.IDEA_VERSION }}-downloads-${{ hashFiles('downloads/**') }}
          restore-keys: ${{ matrix.IDEA_VERSION }}-downloads

      - name: Cache intelliJ downloads
        uses: actions/cache@v3
        with:
          path: $GITHUB_WORKSPACE/idea-IU
          key: ${{ matrix.IDEA_VERSION }}-idea-${{ hashFiles('ideaIU-${{ matrix.IDEA_VERSION }}/**') }}
          restore-keys: ${{ matrix.IDEA_VERSION }}-idea

      - name: Build with Gradle
        run: ./gradlew clean test buildPlugin verifyPlugin


      # Upload artifact as a release asset
      - name: Upload Release Asset
        if: ${{ inputs.tagName || github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} ./build/distributions/*

  finish:
    name: publish Pre-release
    needs: [prepare, build]
    runs-on: ubuntu-latest
    steps:
      - name: Publish release
        uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ needs.prepare.outputs.id }}

